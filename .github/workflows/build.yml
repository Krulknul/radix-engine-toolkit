name: Build

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop
      - main

jobs:
  build:
    runs-on: macos-latest
    continue-on-error: false
    strategy:
      matrix:
        # Update this when we add new interface crates or targets
        crate: [ radix-engine-toolkit-native, radix-engine-toolkit-jni, radix-engine-toolkit-wasm ]
        build-target: [ aarch64-apple-ios-sim, x86_64-unknown-linux-gnu, wasm32-unknown-unknown, i686-linux-android, x86_64-apple-ios, aarch64-apple-ios, x86_64-pc-windows-gnu, aarch64-apple-darwin, aarch64-linux-android, armv7-linux-androideabi, x86_64-apple-darwin ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust Toolchain
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs -o rustup.sh
          chmod +x rustup.sh
          ./rustup.sh -y
          rustup update
          rustup toolchain install nightly

      # When we require an additional target, do not forget to add it to this list of targets that
      - name: Install Rust Targets
        run: |
          rustup target install ${{ matrix.build-target }}
          rustup +nightly target install ${{ matrix.build-target }}
          rustup component add rust-src --toolchain nightly-x86_64-apple-darwin

      - name: Install Build Dependencies
        run: |
          brew tap SergioBenitez/osxct
          brew install llvm
          brew install x86_64-unknown-linux-gnu
          brew install mingw-w64

      # =====================================
      # Crate and Target Dependendent builds
      # =====================================
      # Note: There is no other way to do a "if else" type logic. What we are trying to achieve
      # here is to have different build parameters depending on the crate and the target that the
      # toolkit is being built for.
      
      # TODO: Determine if some of this logic could be changed to a matrix of objects which define
      # the crate, target, CC, AR, and LINKER

      - name: Building radix-engine-toolkit-native for aarch64-apple-darwin
        if: ${{ matrix.crate=='radix-engine-toolkit-native' && matrix.build-target=='aarch64-apple-darwin' }}
        run: |
          cd radix-engine-toolkit-native
          export CC="/usr/local/opt/llvm/bin/clang"
          export AR="/usr/local/opt/llvm/bin/llvm-ar"
          cargo +nightly build -Z build-std=std,panic_abort -Z build-std-features=panic_immediate_abort --target aarch64-apple-darwin --release

      # =================
      # Aggregate and 

      # - name: Build ${{ matrix.target }}
      #   continue-on-error: true
      #   run: |
      #     rustup target add ${{ matrix.rust-target }}
      #     rustup +nightly target add ${{ matrix.rust-target }}
      #     rustup component add rust-src --toolchain nightly-x86_64-apple-darwin
      #     cargo install --force cbindgen cross
      #     brew install llvm
      #     export AR="/usr/local/opt/llvm/bin/llvm-ar"
      #     export CC="/usr/local/opt/llvm/bin/clang"
      #     brew install binaryen
      #     ./build.sh radix-engine-toolkit-${{ matrix.target }}

      # - name: Upload ${{ matrix.target }} artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: radix-engine-toolkit-${{ matrix.target }}
      #     path: build/radix-engine-toolkit-${{ matrix.target }}-*
