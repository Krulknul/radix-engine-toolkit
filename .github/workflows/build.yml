name: Build

on:
  pull_request:
    branches:
      - develop
      - main
  push:
    branches:
      - develop
      - main

jobs:
  build:
    runs-on: macos-latest
    continue-on-error: true
    strategy:
      matrix:
        build-target:
          # radix-engine-toolkit-native Crate
          - crate: radix-engine-toolkit-native
            target-triple: aarch64-apple-darwin
            custom-linker: ""
            custom-compiler: /usr/local/opt/llvm/bin/clang
            custom-archiver: /usr/local/opt/llvm/bin/llvm-ar
          - crate: radix-engine-toolkit-native
            target-triple: x86_64-apple-darwin
            custom-linker: ""
            custom-compiler: /usr/local/opt/llvm/bin/clang
            custom-archiver: /usr/local/opt/llvm/bin/llvm-ar
          - crate: radix-engine-toolkit-native
            target-triple: aarch64-apple-ios
            custom-linker: ""
            custom-compiler: /usr/local/opt/llvm/bin/clang
            custom-archiver: /usr/local/opt/llvm/bin/llvm-ar
          - crate: radix-engine-toolkit-native
            target-triple: aarch64-apple-ios-sim
            custom-linker: ""
            custom-compiler: /usr/local/opt/llvm/bin/clang
            custom-archiver: /usr/local/opt/llvm/bin/llvm-ar
          - crate: radix-engine-toolkit-native
            target-triple: x86_64-pc-windows-gnu
            custom-linker: ""
            custom-compiler: x86_64-w64-mingw32-gcc
            custom-archiver: x86_64-w64-mingw32-ar
          - crate: radix-engine-toolkit-native
            target-triple: x86_64-unknown-linux-gnu
            custom-linker: x86_64-unknown-linux-gnu-gcc
            custom-compiler: /usr/local/opt/llvm/bin/clang
            custom-archiver: /usr/local/opt/llvm/bin/llvm-ar
          
          # radix-engine-toolkit-wasm Crate
          - crate: radix-engine-toolkit-wasm
            target-triple: wasm32-unknown-unknown
            custom-linker: ""
            custom-compiler: /usr/local/opt/llvm/bin/clang
            custom-archiver: /usr/local/opt/llvm/bin/llvm-ar
          
          # radix-engine-toolkit-jni Crate
          - crate: radix-engine-toolkit-jni
            target-triple: aarch64-apple-darwin
            custom-linker: ""
            custom-compiler: /usr/local/opt/llvm/bin/clang
            custom-archiver: /usr/local/opt/llvm/bin/llvm-ar
          - crate: radix-engine-toolkit-jni
            target-triple: x86_64-apple-darwin
            custom-linker: ""
            custom-compiler: /usr/local/opt/llvm/bin/clang
            custom-archiver: /usr/local/opt/llvm/bin/llvm-ar
          - crate: radix-engine-toolkit-jni
            target-triple: x86_64-pc-windows-gnu
            custom-linker: ""
            custom-compiler: x86_64-w64-mingw32-gcc
            custom-archiver: x86_64-w64-mingw32-ar
          - crate: radix-engine-toolkit-jni
            target-triple: x86_64-unknown-linux-gnu
            custom-linker: x86_64-unknown-linux-gnu-gcc
            custom-compiler: /usr/local/opt/llvm/bin/clang
            custom-archiver: /usr/local/opt/llvm/bin/llvm-ar
          - crate: radix-engine-toolkit-jni
            target-triple: aarch64-linux-android
            custom-linker: /usr/local/share/android-ndk/toolchains/llvm/prebuilt/darwin-x86_64/bin/aarch64-linux-android21-clang
            custom-compiler: /usr/local/share/android-ndk/toolchains/llvm/prebuilt/darwin-x86_64/bin/aarch64-linux-android21-clang
            custom-archiver: /usr/local/share/android-ndk/toolchains/llvm/prebuilt/darwin-x86_64/bin/llvm-ar
          - crate: radix-engine-toolkit-jni
            target-triple: armv7-linux-androideabi
            custom-linker: /usr/local/share/android-ndk/toolchains/llvm/prebuilt/darwin-x86_64/bin/armv7a-linux-androideabi19-clang
            custom-compiler: /usr/local/share/android-ndk/toolchains/llvm/prebuilt/darwin-x86_64/bin/armv7a-linux-androideabi19-clang
            custom-archiver: /usr/local/share/android-ndk/toolchains/llvm/prebuilt/darwin-x86_64/bin/llvm-ar
          - crate: radix-engine-toolkit-jni
            target-triple: i686-linux-android
            custom-linker: /usr/local/share/android-ndk/toolchains/llvm/prebuilt/darwin-x86_64/bin/i686-linux-android19-clang
            custom-compiler: /usr/local/share/android-ndk/toolchains/llvm/prebuilt/darwin-x86_64/bin/i686-linux-android19-clang
            custom-archiver: /usr/local/share/android-ndk/toolchains/llvm/prebuilt/darwin-x86_64/bin/llvm-ar

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Build Dependencies
        run: |
          brew tap SergioBenitez/osxct
          brew install llvm
          brew install x86_64-unknown-linux-gnu
          brew install mingw-w64
          brew install --cask android-ndk
          brew install gcc

      - name: Install Rust Toolchain
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs -o rustup.sh
          chmod +x rustup.sh
          ./rustup.sh -y
          rustup update
          rustup toolchain install nightly

      - name: Install Rust Targets
        run: |
          rustup target install ${{ matrix.build-target.target-triple }}
          rustup +nightly target install ${{ matrix.build-target.target-triple }}
          rustup component add rust-src --toolchain nightly-x86_64-apple-darwin

      - name: Building Toolkit
        run: |
          (
            export PATH="/usr/local/opt/llvm/bin:$PATH"
            export LDFLAGS="-L/usr/local/opt/llvm/lib"
            export CPPFLAGS="-I/usr/local/opt/llvm/include"

            export CURRENT_DIRECTORY=$(pwd)
            export CRATE_PATH="$CURRENT_DIRECTORY/${{matrix.build-target.crate}}"
            cd $CRATE_PATH

            export LINKER_ENVIRONMENT_VARIABLE="CARGO_TARGET_"$(echo ${{ matrix.build-target.target-triple }} | tr '[:lower:]' '[:upper:]' | sed 's/-/_/g')"_LINKER"
            if [ ! -z "${{ matrix.build-target.custom-linker }}" ]
            then
              export $LINKER_ENVIRONMENT_VARIABLE=${{ matrix.build-target.custom-linker }}
            fi
            
            export CC=${{ matrix.build-target.custom-compiler }}
            export AR=${{ matrix.build-target.custom-archiver }}

            cargo build \
              --target ${{ matrix.build-target.target-triple }} \
              --release

            unset $LINKER_ENVIRONMENT_VARIABLE
            export CC="/usr/local/opt/llvm/bin/clang"
            export AR="/usr/local/opt/llvm/bin/llvm-ar"

            INCLUDE_DIRECTORY_PATH="$CRATE_PATH/target/${{ matrix.build-target.target-triple }}/release/include"
            mkdir $INCLUDE_DIRECTORY_PATH

            rustup default nightly
            cbindgen \
              --lang c \
              --config cbindgen.toml \
              --output "$INCLUDE_DIRECTORY_PATH/libradix_engine_toolkit.h" 
            rustup default stable

            echo "module RadixEngineToolkit {" > "$INCLUDE_DIRECTORY_PATH/module.modulemap" 
            echo "  umbrella header \"libradix_engine_toolkit.h\"" >> "$INCLUDE_DIRECTORY_PATH/module.modulemap" 
            echo "  export *" >> "$INCLUDE_DIRECTORY_PATH/module.modulemap" 
            echo "}" >> "$INCLUDE_DIRECTORY_PATH/module.modulemap" 

            (
              BUILD_PATH="$CRATE_PATH/target/${{ matrix.build-target.target-triple }}/release"
              cd $BUILD_PATH

              BUILD_ARTIFACTS_PATH=$(find . -type f \( -name "*.a" -o -name "*.dylib" -o -name "*.dll" -o -name "*.so" -o -name "*.d" -o -name "*.wasm" \) -maxdepth 1)
              tar -czf "./${{ matrix.build-target.target-triple }}.tar.gz" $BUILD_ARTIFACTS_PATH ./include
            )
          )

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: "${{ matrix.build-target.crate }}-${{ matrix.build-target.target-triple }}.tar.gz"
          path: "./${{matrix.build-target.crate}}/target/${{ matrix.build-target.target-triple }}/release/${{ matrix.build-target.target-triple }}.tar.gz"
