name: Release

on:
  push:

jobs:
  setup:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [ native, wasm, jni ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: true
          override: true

#      - name: Set up cargo cache
#        id: cache-rust
#        uses: actions/cache@v3
#        continue-on-error: false
#        with:
#          path: |
#            ~/.cargo/
#            ~/.rustup/
#            target/
#          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
#          restore-keys: ${{ runner.os }}-cargo-

      #- if: ${{ steps.cache-rust.outputs.cache-hit != 'true' }}
      - if: always()
        name: Build ${{ matrix.target }}
#      - name: Install rust packages
        run: |
          rustup target add wasm32-unknown-unknown x86_64-apple-ios aarch64-apple-ios aarch64-apple-ios-sim
          rustup target install wasm32-unknown-unknown
          rustup component add rust-src --toolchain nightly-x86_64-apple-darwin
          cargo install --force cbindgen cross
#
#      - name: Install system packages
#        run: |
          brew install llvm docker
          export AR="/opt/homebrew/opt/llvm/bin/llvm-ar"
          export CC="/opt/homebrew/opt/llvm/bin/clang"
          brew install binaryen
#          
#      - if: always()
#        name: Build ${{ matrix.target }}
#        run: |
#          export AR="/opt/homebrew/opt/llvm/bin/llvm-ar"
#          export CC="/opt/homebrew/opt/llvm/bin/clang"
          ./build.sh radix-engine-toolkit-${{ matrix.target }}

#      - name: Build
#        run: |
#          ./build.sh
#
#  build:
#    runs-on: macos-latest
#    needs: [setup]
#
#    strategy:
#      matrix:
#        target: [native, wasm, jni]
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Set up cargo cache
#        uses: actions/cache@v3
#        continue-on-error: false
#        with:
#          path: |
#            ~/.cargo/
#            ~/.rustup/
#            target/
#          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
#          restore-keys: ${{ runner.os }}-cargo-
#
#      - if: always()
#        name: Build ${{ matrix.target }}
#        run: |
#          ./build.sh radix-engine-toolkit-${{ matrix.target }}
