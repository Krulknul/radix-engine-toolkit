name: Test

on:
  pull_request:
    branches:
      - betanet
      - develop
      - main
  push:
    branches:
      - betanet
      - develop
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  rust-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate: [ native-json-interface, radix-engine-toolkit ]

    steps:
    - uses: actions/checkout@v3
    - name: Install Targets
      run: rustup target install wasm32-unknown-unknown
    - name: Run tests
      run: cargo test --manifest-path ./${{ matrix.crate }}/Cargo.toml --verbose

  schema-and-example-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Generating new schema and examples
        run: |
          cd schema
          mv out old-out
          mkdir -p out/examples
          mkdir -p out/schema
          cargo run
      - name: Comparing old examples to newly generated
        run: |
          cd schema
          cmp --quiet ./out/examples/request-examples.md ./old-out/examples/request-examples.md && exit 0 || exit 1
      - name: Comparing old schema to newly generated
        run: |
          cd schema
          for filename in $(find ./out/schema -type f -name "*.json" -exec basename {} \;);
          do
            cmp --quiet out/schema/$filename ./old-out/schema/$filename && exit 0 || exit 1
          done
          exit 0