# Withdraw XRD from account
CALL_METHOD
	ComponentAddress("account_sim1q02r73u7nv47h80e30pc3q6ylsj7mgvparm3pnsm780qgsy064")
	"withdraw_by_amount"
	Decimal("5.0")
	ResourceAddress("resource_sim1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzqu57yag");

# Buy GUM with XRD
TAKE_FROM_WORKTOP_BY_AMOUNT
	Decimal("2.0")
	ResourceAddress("resource_sim1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzqu57yag")
	Bucket("xrd");
CALL_METHOD
	ComponentAddress("component_sim1q2f9vmyrmeladvz0ejfttcztqv3genlsgpu9vue83mcs835hum")
	"buy_gumball"
	Bucket("xrd");
ASSERT_WORKTOP_CONTAINS_BY_AMOUNT
	Decimal("3.0")
	ResourceAddress("resource_sim1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzqu57yag");
ASSERT_WORKTOP_CONTAINS
	ResourceAddress("resource_sim1qzhdk7tq68u8msj38r6v6yqa5myc64ejx3ud20zlh9gseqtux6");

# Create a proof from bucket, clone it and drop both
TAKE_FROM_WORKTOP
	ResourceAddress("resource_sim1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzqu57yag")
	Bucket("1u32");
CREATE_PROOF_FROM_BUCKET
	Bucket("1u32")
	Proof("proof1");
CLONE_PROOF
	Proof("proof1")
	Proof("proof2");
DROP_PROOF
	Proof("proof1");
DROP_PROOF
	Proof("proof2");

# Create a proof from account and drop it
CALL_METHOD
	ComponentAddress("account_sim1q02r73u7nv47h80e30pc3q6ylsj7mgvparm3pnsm780qgsy064")
	"create_proof_by_amount"
	Decimal("5.0")
	ResourceAddress("resource_sim1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzqu57yag");
POP_FROM_AUTH_ZONE
	Proof("proof3");
DROP_PROOF
	Proof("proof3");

# Return a bucket to worktop
RETURN_TO_WORKTOP
	Bucket("1u32");
TAKE_FROM_WORKTOP_BY_IDS
	Set<NonFungibleId>(NonFungibleId("0905000000"),NonFungibleId("0907000000"))
	ResourceAddress("resource_sim1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzqu57yag")
	Bucket("nfts");

# Cancel all buckets and move resources to account
CALL_METHOD_WITH_ALL_RESOURCES
	ComponentAddress("account_sim1q02r73u7nv47h80e30pc3q6ylsj7mgvparm3pnsm780qgsy064")
	"deposit_batch";

# Drop all proofs
DROP_ALL_PROOFS;

# Two ways of publishing package through manifest
PUBLISH_PACKAGE
	Bytes("10020000003007c00000000061736d010000000405017001010105030100100619037f01418080c0000b7f00418080c0000b7f00418080c0000b072503066d656d6f727902000a5f5f646174615f656e6403010b5f5f686561705f6261736503020019046e616d65071201000f5f5f737461636b5f706f696e746572004d0970726f64756365727302086c616e6775616765010452757374000c70726f6365737365642d6279010572757374631d312e35392e30202839643162323130366520323032322d30322d323329320c1000000000");

# Complicated method that takes all of the number types
CALL_METHOD
	ComponentAddress("component_sim1q2f9vmyrmeladvz0ejfttcztqv3genlsgpu9vue83mcs835hum")
	"complicated_method"
	Decimal("1")
	PreciseDecimal("2");