/*
 * Transaction Lib
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;


namespace Model
{
    /// <summary>
    /// Defines ValueKind
    /// </summary>
    
    [JsonConverter(typeof(StringEnumConverter))]
    
    public enum ValueKind
    {
        /// <summary>
        /// Enum Unit for value: Unit
        /// </summary>
        [EnumMember(Value = "Unit")]
        Unit = 1,

        /// <summary>
        /// Enum Bool for value: Bool
        /// </summary>
        [EnumMember(Value = "Bool")]
        Bool = 2,

        /// <summary>
        /// Enum I8 for value: I8
        /// </summary>
        [EnumMember(Value = "I8")]
        I8 = 3,

        /// <summary>
        /// Enum I16 for value: I16
        /// </summary>
        [EnumMember(Value = "I16")]
        I16 = 4,

        /// <summary>
        /// Enum I32 for value: I32
        /// </summary>
        [EnumMember(Value = "I32")]
        I32 = 5,

        /// <summary>
        /// Enum I64 for value: I64
        /// </summary>
        [EnumMember(Value = "I64")]
        I64 = 6,

        /// <summary>
        /// Enum I128 for value: I128
        /// </summary>
        [EnumMember(Value = "I128")]
        I128 = 7,

        /// <summary>
        /// Enum U8 for value: U8
        /// </summary>
        [EnumMember(Value = "U8")]
        U8 = 8,

        /// <summary>
        /// Enum U16 for value: U16
        /// </summary>
        [EnumMember(Value = "U16")]
        U16 = 9,

        /// <summary>
        /// Enum U32 for value: U32
        /// </summary>
        [EnumMember(Value = "U32")]
        U32 = 10,

        /// <summary>
        /// Enum U64 for value: U64
        /// </summary>
        [EnumMember(Value = "U64")]
        U64 = 11,

        /// <summary>
        /// Enum U128 for value: U128
        /// </summary>
        [EnumMember(Value = "U128")]
        U128 = 12,

        /// <summary>
        /// Enum String for value: String
        /// </summary>
        [EnumMember(Value = "String")]
        String = 13,

        /// <summary>
        /// Enum Struct for value: Struct
        /// </summary>
        [EnumMember(Value = "Struct")]
        Struct = 14,

        /// <summary>
        /// Enum Enum for value: Enum
        /// </summary>
        [EnumMember(Value = "Enum")]
        Enum = 15,

        /// <summary>
        /// Enum Option for value: Option
        /// </summary>
        [EnumMember(Value = "Option")]
        Option = 16,

        /// <summary>
        /// Enum Array for value: Array
        /// </summary>
        [EnumMember(Value = "Array")]
        Array = 17,

        /// <summary>
        /// Enum Tuple for value: Tuple
        /// </summary>
        [EnumMember(Value = "Tuple")]
        Tuple = 18,

        /// <summary>
        /// Enum Result for value: Result
        /// </summary>
        [EnumMember(Value = "Result")]
        Result = 19,

        /// <summary>
        /// Enum List for value: List
        /// </summary>
        [EnumMember(Value = "List")]
        List = 20,

        /// <summary>
        /// Enum Set for value: Set
        /// </summary>
        [EnumMember(Value = "Set")]
        Set = 21,

        /// <summary>
        /// Enum Map for value: Map
        /// </summary>
        [EnumMember(Value = "Map")]
        Map = 22,

        /// <summary>
        /// Enum Decimal for value: Decimal
        /// </summary>
        [EnumMember(Value = "Decimal")]
        Decimal = 23,

        /// <summary>
        /// Enum PreciseDecimal for value: PreciseDecimal
        /// </summary>
        [EnumMember(Value = "PreciseDecimal")]
        PreciseDecimal = 24,

        /// <summary>
        /// Enum PackageAddress for value: PackageAddress
        /// </summary>
        [EnumMember(Value = "PackageAddress")]
        PackageAddress = 25,

        /// <summary>
        /// Enum ComponentAddress for value: ComponentAddress
        /// </summary>
        [EnumMember(Value = "ComponentAddress")]
        ComponentAddress = 26,

        /// <summary>
        /// Enum ResourceAddress for value: ResourceAddress
        /// </summary>
        [EnumMember(Value = "ResourceAddress")]
        ResourceAddress = 27,

        /// <summary>
        /// Enum Hash for value: Hash
        /// </summary>
        [EnumMember(Value = "Hash")]
        Hash = 28,

        /// <summary>
        /// Enum Bucket for value: Bucket
        /// </summary>
        [EnumMember(Value = "Bucket")]
        Bucket = 29,

        /// <summary>
        /// Enum Proof for value: Proof
        /// </summary>
        [EnumMember(Value = "Proof")]
        Proof = 30,

        /// <summary>
        /// Enum NonFungibleId for value: NonFungibleId
        /// </summary>
        [EnumMember(Value = "NonFungibleId")]
        NonFungibleId = 31,

        /// <summary>
        /// Enum NonFungibleAddress for value: NonFungibleAddress
        /// </summary>
        [EnumMember(Value = "NonFungibleAddress")]
        NonFungibleAddress = 32,

        /// <summary>
        /// Enum Bytes for value: Bytes
        /// </summary>
        [EnumMember(Value = "Bytes")]
        Bytes = 33

    }

}
