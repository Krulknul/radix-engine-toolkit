/*
 * Transaction Lib
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace Models
{
    /// <summary>
    /// DecompileUnknownTransactionIntentRequest
    /// </summary>
    [DataContract]
    public partial class DecompileUnknownTransactionIntentRequest :  IEquatable<DecompileUnknownTransactionIntentRequest>, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets ManifestInstructionsOutputFormat
        /// </summary>
        [DataMember(Name="manifest_instructions_output_format", EmitDefaultValue=true)]
        public ManifestKind ManifestInstructionsOutputFormat { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="DecompileUnknownTransactionIntentRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected DecompileUnknownTransactionIntentRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="DecompileUnknownTransactionIntentRequest" /> class.
        /// </summary>
        /// <param name="manifestInstructionsOutputFormat">manifestInstructionsOutputFormat (required).</param>
        /// <param name="compiledUnknownIntent">compiledUnknownIntent (required).</param>
        public DecompileUnknownTransactionIntentRequest(ManifestKind manifestInstructionsOutputFormat = default(ManifestKind), string compiledUnknownIntent = default(string))
        {
            // to ensure "manifestInstructionsOutputFormat" is required (not null)
            if (manifestInstructionsOutputFormat == null)
            {
                throw new InvalidDataException("manifestInstructionsOutputFormat is a required property for DecompileUnknownTransactionIntentRequest and cannot be null");
            }
            else
            {
                this.ManifestInstructionsOutputFormat = manifestInstructionsOutputFormat;
            }

            // to ensure "compiledUnknownIntent" is required (not null)
            if (compiledUnknownIntent == null)
            {
                throw new InvalidDataException("compiledUnknownIntent is a required property for DecompileUnknownTransactionIntentRequest and cannot be null");
            }
            else
            {
                this.CompiledUnknownIntent = compiledUnknownIntent;
            }

        }


        /// <summary>
        /// Gets or Sets CompiledUnknownIntent
        /// </summary>
        [DataMember(Name="compiled_unknown_intent", EmitDefaultValue=true)]
        public string CompiledUnknownIntent { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DecompileUnknownTransactionIntentRequest {\n");
            sb.Append("  ManifestInstructionsOutputFormat: ").Append(ManifestInstructionsOutputFormat).Append("\n");
            sb.Append("  CompiledUnknownIntent: ").Append(CompiledUnknownIntent).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DecompileUnknownTransactionIntentRequest);
        }

        /// <summary>
        /// Returns true if DecompileUnknownTransactionIntentRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of DecompileUnknownTransactionIntentRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DecompileUnknownTransactionIntentRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ManifestInstructionsOutputFormat == input.ManifestInstructionsOutputFormat ||
                    (this.ManifestInstructionsOutputFormat != null &&
                    this.ManifestInstructionsOutputFormat.Equals(input.ManifestInstructionsOutputFormat))
                ) && 
                (
                    this.CompiledUnknownIntent == input.CompiledUnknownIntent ||
                    (this.CompiledUnknownIntent != null &&
                    this.CompiledUnknownIntent.Equals(input.CompiledUnknownIntent))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ManifestInstructionsOutputFormat != null)
                    hashCode = hashCode * 59 + this.ManifestInstructionsOutputFormat.GetHashCode();
                if (this.CompiledUnknownIntent != null)
                    hashCode = hashCode * 59 + this.CompiledUnknownIntent.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
