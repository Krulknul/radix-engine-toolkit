/*
 * Transaction Lib
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace Models
{
    /// <summary>
    /// PopFromAuthZoneAllOf
    /// </summary>
    [DataContract]
    public partial class PopFromAuthZoneAllOf :  IEquatable<PopFromAuthZoneAllOf>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PopFromAuthZoneAllOf" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PopFromAuthZoneAllOf() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PopFromAuthZoneAllOf" /> class.
        /// </summary>
        /// <param name="intoProof">intoProof (required).</param>
        public PopFromAuthZoneAllOf(Proof intoProof = default(Proof))
        {
            // to ensure "intoProof" is required (not null)
            if (intoProof == null)
            {
                throw new InvalidDataException("intoProof is a required property for PopFromAuthZoneAllOf and cannot be null");
            }
            else
            {
                this.IntoProof = intoProof;
            }

        }

        /// <summary>
        /// Gets or Sets IntoProof
        /// </summary>
        [DataMember(Name="into_proof", EmitDefaultValue=true)]
        public Proof IntoProof { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PopFromAuthZoneAllOf {\n");
            sb.Append("  IntoProof: ").Append(IntoProof).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PopFromAuthZoneAllOf);
        }

        /// <summary>
        /// Returns true if PopFromAuthZoneAllOf instances are equal
        /// </summary>
        /// <param name="input">Instance of PopFromAuthZoneAllOf to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PopFromAuthZoneAllOf input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.IntoProof == input.IntoProof ||
                    (this.IntoProof != null &&
                    this.IntoProof.Equals(input.IntoProof))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.IntoProof != null)
                    hashCode = hashCode * 59 + this.IntoProof.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
