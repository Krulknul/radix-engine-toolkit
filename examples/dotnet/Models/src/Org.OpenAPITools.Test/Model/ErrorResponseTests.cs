/*
 * Transaction Library
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing ErrorResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ErrorResponseTests
    {
        // TODO uncomment below to declare an instance variable for ErrorResponse
        //private ErrorResponse instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of ErrorResponse
            //instance = new ErrorResponse();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ErrorResponse
        /// </summary>
        [Test]
        public void ErrorResponseInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" ErrorResponse
            //Assert.IsInstanceOf(typeof(ErrorResponse), instance);
        }

        /// <summary>
        /// Test deserialize a AddressError from type ErrorResponse
        /// </summary>
        [Test]
        public void AddressErrorDeserializeFromErrorResponseTest()
        {
            // TODO uncomment below to test deserialize a AddressError from type ErrorResponse
            //Assert.IsInstanceOf(typeof(ErrorResponse), JsonConvert.DeserializeObject<ErrorResponse>(new AddressError().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DecodeError from type ErrorResponse
        /// </summary>
        [Test]
        public void DecodeErrorDeserializeFromErrorResponseTest()
        {
            // TODO uncomment below to test deserialize a DecodeError from type ErrorResponse
            //Assert.IsInstanceOf(typeof(ErrorResponse), JsonConvert.DeserializeObject<ErrorResponse>(new DecodeError().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DeserializationError from type ErrorResponse
        /// </summary>
        [Test]
        public void DeserializationErrorDeserializeFromErrorResponseTest()
        {
            // TODO uncomment below to test deserialize a DeserializationError from type ErrorResponse
            //Assert.IsInstanceOf(typeof(ErrorResponse), JsonConvert.DeserializeObject<ErrorResponse>(new DeserializationError().ToJson()));
        }
        /// <summary>
        /// Test deserialize a GeneratorError from type ErrorResponse
        /// </summary>
        [Test]
        public void GeneratorErrorDeserializeFromErrorResponseTest()
        {
            // TODO uncomment below to test deserialize a GeneratorError from type ErrorResponse
            //Assert.IsInstanceOf(typeof(ErrorResponse), JsonConvert.DeserializeObject<ErrorResponse>(new GeneratorError().ToJson()));
        }
        /// <summary>
        /// Test deserialize a InvalidRequestString from type ErrorResponse
        /// </summary>
        [Test]
        public void InvalidRequestStringDeserializeFromErrorResponseTest()
        {
            // TODO uncomment below to test deserialize a InvalidRequestString from type ErrorResponse
            //Assert.IsInstanceOf(typeof(ErrorResponse), JsonConvert.DeserializeObject<ErrorResponse>(new InvalidRequestString().ToJson()));
        }
        /// <summary>
        /// Test deserialize a InvalidType from type ErrorResponse
        /// </summary>
        [Test]
        public void InvalidTypeDeserializeFromErrorResponseTest()
        {
            // TODO uncomment below to test deserialize a InvalidType from type ErrorResponse
            //Assert.IsInstanceOf(typeof(ErrorResponse), JsonConvert.DeserializeObject<ErrorResponse>(new InvalidType().ToJson()));
        }
        /// <summary>
        /// Test deserialize a NoManifestRepresentation from type ErrorResponse
        /// </summary>
        [Test]
        public void NoManifestRepresentationDeserializeFromErrorResponseTest()
        {
            // TODO uncomment below to test deserialize a NoManifestRepresentation from type ErrorResponse
            //Assert.IsInstanceOf(typeof(ErrorResponse), JsonConvert.DeserializeObject<ErrorResponse>(new NoManifestRepresentation().ToJson()));
        }
        /// <summary>
        /// Test deserialize a ParseError from type ErrorResponse
        /// </summary>
        [Test]
        public void ParseErrorDeserializeFromErrorResponseTest()
        {
            // TODO uncomment below to test deserialize a ParseError from type ErrorResponse
            //Assert.IsInstanceOf(typeof(ErrorResponse), JsonConvert.DeserializeObject<ErrorResponse>(new ParseError().ToJson()));
        }
        /// <summary>
        /// Test deserialize a RequestResponseConversionError from type ErrorResponse
        /// </summary>
        [Test]
        public void RequestResponseConversionErrorDeserializeFromErrorResponseTest()
        {
            // TODO uncomment below to test deserialize a RequestResponseConversionError from type ErrorResponse
            //Assert.IsInstanceOf(typeof(ErrorResponse), JsonConvert.DeserializeObject<ErrorResponse>(new RequestResponseConversionError().ToJson()));
        }
        /// <summary>
        /// Test deserialize a TransactionCompileError from type ErrorResponse
        /// </summary>
        [Test]
        public void TransactionCompileErrorDeserializeFromErrorResponseTest()
        {
            // TODO uncomment below to test deserialize a TransactionCompileError from type ErrorResponse
            //Assert.IsInstanceOf(typeof(ErrorResponse), JsonConvert.DeserializeObject<ErrorResponse>(new TransactionCompileError().ToJson()));
        }
        /// <summary>
        /// Test deserialize a TransactionDecompileError from type ErrorResponse
        /// </summary>
        [Test]
        public void TransactionDecompileErrorDeserializeFromErrorResponseTest()
        {
            // TODO uncomment below to test deserialize a TransactionDecompileError from type ErrorResponse
            //Assert.IsInstanceOf(typeof(ErrorResponse), JsonConvert.DeserializeObject<ErrorResponse>(new TransactionDecompileError().ToJson()));
        }
        /// <summary>
        /// Test deserialize a TransactionValidationError from type ErrorResponse
        /// </summary>
        [Test]
        public void TransactionValidationErrorDeserializeFromErrorResponseTest()
        {
            // TODO uncomment below to test deserialize a TransactionValidationError from type ErrorResponse
            //Assert.IsInstanceOf(typeof(ErrorResponse), JsonConvert.DeserializeObject<ErrorResponse>(new TransactionValidationError().ToJson()));
        }
        /// <summary>
        /// Test deserialize a UnexpectedContents from type ErrorResponse
        /// </summary>
        [Test]
        public void UnexpectedContentsDeserializeFromErrorResponseTest()
        {
            // TODO uncomment below to test deserialize a UnexpectedContents from type ErrorResponse
            //Assert.IsInstanceOf(typeof(ErrorResponse), JsonConvert.DeserializeObject<ErrorResponse>(new UnexpectedContents().ToJson()));
        }
        /// <summary>
        /// Test deserialize a UnknownTypeId from type ErrorResponse
        /// </summary>
        [Test]
        public void UnknownTypeIdDeserializeFromErrorResponseTest()
        {
            // TODO uncomment below to test deserialize a UnknownTypeId from type ErrorResponse
            //Assert.IsInstanceOf(typeof(ErrorResponse), JsonConvert.DeserializeObject<ErrorResponse>(new UnknownTypeId().ToJson()));
        }
        /// <summary>
        /// Test deserialize a UnrecognizedAddressFormat from type ErrorResponse
        /// </summary>
        [Test]
        public void UnrecognizedAddressFormatDeserializeFromErrorResponseTest()
        {
            // TODO uncomment below to test deserialize a UnrecognizedAddressFormat from type ErrorResponse
            //Assert.IsInstanceOf(typeof(ErrorResponse), JsonConvert.DeserializeObject<ErrorResponse>(new UnrecognizedAddressFormat().ToJson()));
        }
        /// <summary>
        /// Test deserialize a UnsupportedTransactionVersion from type ErrorResponse
        /// </summary>
        [Test]
        public void UnsupportedTransactionVersionDeserializeFromErrorResponseTest()
        {
            // TODO uncomment below to test deserialize a UnsupportedTransactionVersion from type ErrorResponse
            //Assert.IsInstanceOf(typeof(ErrorResponse), JsonConvert.DeserializeObject<ErrorResponse>(new UnsupportedTransactionVersion().ToJson()));
        }

        /// <summary>
        /// Test the property 'Error'
        /// </summary>
        [Test]
        public void ErrorTest()
        {
            // TODO unit test for the property 'Error'
        }

    }

}
