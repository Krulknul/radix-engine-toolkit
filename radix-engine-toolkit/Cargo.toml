[package]
name = "radix-engine-toolkit"
version = "0.8.0"
edition = "2021"
build = "build.rs"

[dependencies]
# Crates for Serde serialization.
serde = { version = "1.0.152" }
serde_with = { version = "2.2.0", features = ["hex"] }

# A library which allows us to generate a JSON schema from Rust models
schemars = { version = "0.8.11", features = ["preserve_order"] }

# An attribute macro to setup a model to be serializable and also to have a JSON schema. 
serializable = { path = "../serializable" }

# Scrypto dependencies required for the core-toolkit
sbor = { git = "https://github.com/radixdlt/radixdlt-scrypto", tag = "betanet-v2-c816729" }
scrypto = { git = "https://github.com/radixdlt/radixdlt-scrypto", tag = "betanet-v2-c816729" }
scrypto_utils = { git = "https://github.com/radixdlt/radixdlt-scrypto", tag = "betanet-v2-c816729", package = "utils" }
native_transaction = { git = "https://github.com/radixdlt/radixdlt-scrypto", tag = "betanet-v2-c816729", package = "transaction" }
radix-engine-constants = { git = "https://github.com/radixdlt/radixdlt-scrypto", tag = "betanet-v2-c816729" }

# Hex is used for the internal hex encoding and decoding of values - serde_with::Hex is used for the
# hex representation during serialization.
hex = { version = "0.4.3", default-features = false }

# Bech32 is used for the network aware addresses (some additional functionality is required which we
# don't expose through the Scrypto Bech32 encoder and decoder)
bech32 = { version = "0.9.0", default-features = false }

[dev-dependencies]
lazy_static = { version = "1.4.0" }
serde_json = { version = "1.0.91" }