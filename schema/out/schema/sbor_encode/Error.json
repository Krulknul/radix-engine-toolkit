{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Error",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "error",
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ManifestSborValueConversionError"
          ]
        },
        "error": {
          "$ref": "#/definitions/ManifestSborValueConversionError"
        }
      }
    },
    {
      "type": "object",
      "required": [
        "error",
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ScryptoSborValueConversionError"
          ]
        },
        "error": {
          "$ref": "#/definitions/ScryptoSborValueConversionError"
        }
      }
    },
    {
      "type": "object",
      "required": [
        "error",
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Error"
          ]
        },
        "error": {
          "type": "object",
          "required": [
            "message"
          ],
          "properties": {
            "message": {
              "type": "string"
            }
          }
        }
      }
    }
  ],
  "definitions": {
    "ManifestSborValueConversionError": {
      "description": "An error emitted if the conversion between the native and RET representations of the Manifest Sbor fails.",
      "oneOf": [
        {
          "description": "An error emitted when trying to parse a string to a type fails.",
          "type": "object",
          "required": [
            "message",
            "parsing",
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "ParseError"
              ]
            },
            "parsing": {
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          }
        },
        {
          "description": "An error emitted when the length of the byte array encountered is unexpected.",
          "type": "object",
          "required": [
            "actual",
            "expected",
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "InvalidLength"
              ]
            },
            "expected": {
              "type": "integer",
              "format": "uint",
              "minimum": 0.0
            },
            "actual": {
              "type": "integer",
              "format": "uint",
              "minimum": 0.0
            }
          }
        },
        {
          "description": "An error emitted when invalid non-fungible local ids are provided.",
          "type": "object",
          "required": [
            "message",
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "ScryptoContentValidationError"
              ]
            },
            "message": {
              "type": "string"
            }
          }
        },
        {
          "description": "An error emitted when a value of an unexpected kind is encountered.",
          "type": "object",
          "required": [
            "expected",
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "InvalidType"
              ]
            },
            "expected": {
              "$ref": "#/definitions/ManifestSborValueKind"
            }
          }
        }
      ]
    },
    "ManifestSborValueKind": {
      "oneOf": [
        {
          "description": "A boolean value which can either be true or false",
          "examples": [
            {
              "kind": "Bool",
              "value": false
            },
            {
              "kind": "Bool",
              "value": true
            }
          ],
          "type": "string",
          "enum": [
            "Bool"
          ]
        },
        {
          "description": "An 8-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "kind": "U8",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "U8"
          ]
        },
        {
          "description": "A 16-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "kind": "U16",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "U16"
          ]
        },
        {
          "description": "A 32-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "kind": "U32",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "U32"
          ]
        },
        {
          "description": "A 64-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "kind": "U64",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "U64"
          ]
        },
        {
          "description": "A 128-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "kind": "U128",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "U128"
          ]
        },
        {
          "description": "An 8-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "kind": "I8",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "I8"
          ]
        },
        {
          "description": "A 16-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "kind": "I16",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "I16"
          ]
        },
        {
          "description": "A 32-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "kind": "I32",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "I32"
          ]
        },
        {
          "description": "A 64-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "kind": "I64",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "I64"
          ]
        },
        {
          "description": "A 128-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "kind": "I128",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "I128"
          ]
        },
        {
          "description": "A type representing a string",
          "examples": [
            {
              "kind": "String",
              "value": "Scrypto"
            }
          ],
          "type": "string",
          "enum": [
            "String"
          ]
        },
        {
          "description": "A Rust-style Enum which has a variant and can optionally also have a list of values (acting in a way similar to discriminated algebraic sum types)",
          "examples": [
            {
              "fields": [],
              "kind": "Enum",
              "variant_id": "1"
            },
            {
              "fields": [
                {
                  "kind": "U8",
                  "value": "1"
                }
              ],
              "kind": "Enum",
              "variant_id": "1"
            }
          ],
          "type": "string",
          "enum": [
            "Enum"
          ]
        },
        {
          "description": "An array values of a single value kind",
          "examples": [
            {
              "element_kind": "U8",
              "elements": [
                {
                  "kind": "U8",
                  "value": "1"
                },
                {
                  "kind": "U8",
                  "value": "2"
                },
                {
                  "kind": "U8",
                  "value": "3"
                }
              ],
              "kind": "Array"
            }
          ],
          "type": "string",
          "enum": [
            "Array"
          ]
        },
        {
          "description": "A key-value map of values where all keys are of a single kind and all values are of a single kind",
          "examples": [
            {
              "entries": [
                {
                  "key": {
                    "kind": "U8",
                    "value": "65"
                  },
                  "value": {
                    "kind": "String",
                    "value": "A"
                  }
                },
                {
                  "key": {
                    "kind": "U8",
                    "value": "66"
                  },
                  "value": {
                    "kind": "String",
                    "value": "B"
                  }
                }
              ],
              "key_kind": "U8",
              "kind": "Map",
              "value_kind": "String"
            }
          ],
          "type": "string",
          "enum": [
            "Map"
          ]
        },
        {
          "description": "An array of elements where elements could be of different kinds.",
          "examples": [
            {
              "fields": [
                {
                  "fields": [
                    {
                      "kind": "U8",
                      "value": "1"
                    },
                    {
                      "kind": "String",
                      "value": "Something"
                    }
                  ],
                  "kind": "Tuple"
                }
              ],
              "kind": "Tuple"
            }
          ],
          "type": "string",
          "enum": [
            "Tuple"
          ]
        },
        {
          "description": "Represents a Bech32m encoded human-readable address which may be used to address a package, component, or resource. This address is serialized as a human-readable bech32m encoded string.",
          "examples": [
            {
              "kind": "Address",
              "value": "package_rdx1pkgxxxxxxxxxfaucetxxxxxxxxx000034355863xxxxxxxxxfaucet"
            },
            {
              "kind": "Address",
              "value": "resource_rdx1tknxxxxxxxxxradxrdxxxxxxxxx009923554798xxxxxxxxxradxrd"
            },
            {
              "kind": "Address",
              "value": "clock_rdx1skxxxxxxxxxxclckxxxxxxxxxxx002253583992xxxxxxxxxclckxx"
            }
          ],
          "type": "string",
          "enum": [
            "Address"
          ]
        },
        {
          "description": "Represents a Scrypto bucket which is identified through a transient identifier which is a 32-bit integer which is serialized as a Integer.",
          "examples": [
            {
              "kind": "Bucket",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "Bucket"
          ]
        },
        {
          "description": "Represents a Scrypto proof which is identified through a transient identifier which is a 32-bit integer which is serialized as a Integer.",
          "examples": [
            {
              "kind": "Proof",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "Proof"
          ]
        },
        {
          "description": "A Scrypto Decimal which has a precision of 18 decimal places and has a maximum and minimum of 57896044618658097711785492504343953926634992332820282019728.792003956564819967 and -57896044618658097711785492504343953926634992332820282019728.792003956564819968 respectively",
          "examples": [
            {
              "kind": "Decimal",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "Decimal"
          ]
        },
        {
          "description": "A Scrypto PreciseDecimal which has a precision of 64 decimal places and has a maximum and minimum of 670390396497129854978701249910292306373968291029619668886178072186088201503677348840093714. 9083451713845015929093243025426876941405973284973216824503042047 and -670390396497129854978701249910292306373968291029619668886178072186088201503677348840093714.9083451713845015929093243025426876941405973284973216824503042048 respectively",
          "examples": [
            {
              "kind": "PreciseDecimal",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "PreciseDecimal"
          ]
        },
        {
          "description": "Represents non-fungible ids which is a discriminated union of the different types that non-fungible ids may be.",
          "examples": [
            {
              "kind": "NonFungibleLocalId",
              "value": "{b55081fa-9cd1-48c2-95d4-efe2db322a54}"
            },
            {
              "kind": "NonFungibleLocalId",
              "value": "#1#"
            },
            {
              "kind": "NonFungibleLocalId",
              "value": "<Scrypto>"
            },
            {
              "kind": "NonFungibleLocalId",
              "value": "[01020304]"
            }
          ],
          "type": "string",
          "enum": [
            "NonFungibleLocalId"
          ]
        },
        {
          "description": "Represents a transaction manifest expression.",
          "examples": [
            {
              "kind": "Expression",
              "value": "ENTIRE_AUTH_ZONE"
            },
            {
              "kind": "Expression",
              "value": "ENTIRE_WORKTOP"
            }
          ],
          "type": "string",
          "enum": [
            "Expression"
          ]
        },
        {
          "description": "Represents the hash of a blob provided as part of a transaction manifest. This is represented as a byte array of 32 bytes which is serialized as a hex string.",
          "examples": [
            {
              "kind": "Blob",
              "value": "d28d2c3710601fbc097000ec73455693f4861dc0eb7c90d8821f2a13f617313e"
            }
          ],
          "type": "string",
          "enum": [
            "Blob"
          ]
        },
        {
          "description": "Represents a byte array of an unknown size which is serialized as a hex string",
          "examples": [
            {
              "element_kind": "U8",
              "hex": "d28d2c3710601fbc097000ec73455693f4861dc0eb7c90d8821f2a13f617313e",
              "kind": "Bytes"
            }
          ],
          "type": "string",
          "enum": [
            "Bytes"
          ]
        }
      ]
    },
    "ScryptoSborValueConversionError": {
      "description": "An error emitted if the conversion between the native and RET representations of the Scrypto Sbor fails.",
      "oneOf": [
        {
          "description": "An error emitted when trying to parse a string to a type fails.",
          "type": "object",
          "required": [
            "message",
            "parsing",
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "ParseError"
              ]
            },
            "parsing": {
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          }
        },
        {
          "description": "An error emitted when a value of an unexpected kind is encountered.",
          "type": "object",
          "required": [
            "expected",
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "InvalidType"
              ]
            },
            "expected": {
              "$ref": "#/definitions/ScryptoSborValueKind"
            }
          }
        }
      ]
    },
    "ScryptoSborValueKind": {
      "oneOf": [
        {
          "description": "A boolean value which can either be true or false",
          "examples": [
            {
              "kind": "Bool",
              "value": false
            },
            {
              "kind": "Bool",
              "value": true
            }
          ],
          "type": "string",
          "enum": [
            "Bool"
          ]
        },
        {
          "description": "An 8-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "kind": "U8",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "U8"
          ]
        },
        {
          "description": "A 16-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "kind": "U16",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "U16"
          ]
        },
        {
          "description": "A 32-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "kind": "U32",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "U32"
          ]
        },
        {
          "description": "A 64-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "kind": "U64",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "U64"
          ]
        },
        {
          "description": "A 128-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "kind": "U128",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "U128"
          ]
        },
        {
          "description": "An 8-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "kind": "I8",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "I8"
          ]
        },
        {
          "description": "A 16-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "kind": "I16",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "I16"
          ]
        },
        {
          "description": "A 32-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "kind": "I32",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "I32"
          ]
        },
        {
          "description": "A 64-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "kind": "I32",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "I64"
          ]
        },
        {
          "description": "A 128-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "kind": "I128",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "I128"
          ]
        },
        {
          "description": "A type representing a string",
          "examples": [
            {
              "kind": "String",
              "value": "Scrypto"
            }
          ],
          "type": "string",
          "enum": [
            "String"
          ]
        },
        {
          "description": "A Rust-style Enum which has a variant and can optionally also have a list of values (acting in a way similar to discriminated algebraic sum types)",
          "examples": [
            {
              "fields": [],
              "kind": "Enum",
              "variant_id": "1"
            },
            {
              "fields": [
                {
                  "kind": "U8",
                  "value": "1"
                }
              ],
              "kind": "Enum",
              "variant_id": "1"
            }
          ],
          "type": "string",
          "enum": [
            "Enum"
          ]
        },
        {
          "description": "An array values of a single value kind",
          "examples": [
            {
              "element_kind": "U8",
              "elements": [
                {
                  "kind": "U8",
                  "value": "1"
                },
                {
                  "kind": "U8",
                  "value": "2"
                },
                {
                  "kind": "U8",
                  "value": "3"
                }
              ],
              "kind": "Array"
            }
          ],
          "type": "string",
          "enum": [
            "Array"
          ]
        },
        {
          "description": "A key-value map of values where all keys are of a single kind and all values are of a single kind",
          "examples": [
            {
              "entries": [
                {
                  "key": {
                    "kind": "U8",
                    "value": "65"
                  },
                  "value": {
                    "kind": "String",
                    "value": "A"
                  }
                },
                {
                  "key": {
                    "kind": "U8",
                    "value": "66"
                  },
                  "value": {
                    "kind": "String",
                    "value": "B"
                  }
                }
              ],
              "key_kind": "U8",
              "kind": "Map",
              "value_kind": "String"
            }
          ],
          "type": "string",
          "enum": [
            "Map"
          ]
        },
        {
          "description": "An array of elements where elements could be of different kinds.",
          "examples": [
            {
              "fields": [
                {
                  "fields": [
                    {
                      "kind": "U8",
                      "value": "1"
                    },
                    {
                      "kind": "String",
                      "value": "Something"
                    }
                  ],
                  "kind": "Tuple"
                }
              ],
              "kind": "Tuple"
            }
          ],
          "type": "string",
          "enum": [
            "Tuple"
          ]
        },
        {
          "description": "Represents a tagged enum of owned Radix Engine Nodes.",
          "examples": [
            {
              "kind": "Own",
              "value": "package_rdx1pkgxxxxxxxxxaccntxxxxxxxxxx000929625493xxxxxxxxxaccntx"
            }
          ],
          "type": "string",
          "enum": [
            "Own"
          ]
        },
        {
          "description": "A Scrypto Decimal which has a precision of 18 decimal places and has a maximum and minimum of 57896044618658097711785492504343953926634992332820282019728.792003956564819967 and -57896044618658097711785492504343953926634992332820282019728.792003956564819968 respectively",
          "examples": [
            {
              "kind": "Decimal",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "Decimal"
          ]
        },
        {
          "description": "A Scrypto PreciseDecimal which has a precision of 64 decimal places and has a maximum and minimum of 670390396497129854978701249910292306373968291029619668886178072186088201503677348840093714. 9083451713845015929093243025426876941405973284973216824503042047 and -670390396497129854978701249910292306373968291029619668886178072186088201503677348840093714.9083451713845015929093243025426876941405973284973216824503042048 respectively",
          "examples": [
            {
              "kind": "PreciseDecimal",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "PreciseDecimal"
          ]
        },
        {
          "description": "Represents non-fungible ids which is a discriminated union of the different types that non-fungible ids may be.",
          "examples": [
            {
              "kind": "NonFungibleLocalId",
              "value": "{b55081fa-9cd1-48c2-95d4-efe2db322a54}"
            },
            {
              "kind": "NonFungibleLocalId",
              "value": "#1#"
            },
            {
              "kind": "NonFungibleLocalId",
              "value": "<Scrypto>"
            },
            {
              "kind": "NonFungibleLocalId",
              "value": "[01020304]"
            }
          ],
          "type": "string",
          "enum": [
            "NonFungibleLocalId"
          ]
        },
        {
          "description": "Represents a reference to some RENode.",
          "examples": [
            {
              "kind": "Reference",
              "value": "package_rdx1pkgxxxxxxxxxaccntxxxxxxxxxx000929625493xxxxxxxxxaccntx"
            }
          ],
          "type": "string",
          "enum": [
            "Reference"
          ]
        },
        {
          "description": "Represents a byte array of an unknown size which is serialized as a hex string",
          "examples": [
            {
              "element_kind": "U8",
              "hex": "d28d2c3710601fbc097000ec73455693f4861dc0eb7c90d8821f2a13f617313e",
              "kind": "Bytes"
            }
          ],
          "type": "string",
          "enum": [
            "Bytes"
          ]
        }
      ]
    }
  }
}