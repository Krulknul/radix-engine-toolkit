{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "SborEncodeRequest",
  "description": "This request takes in a [`Value`] and attempts to SBOR encode it and return back an SBOR byte array.",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "type",
        "value"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ScryptoSbor"
          ]
        },
        "value": {
          "$ref": "#/definitions/ScryptoSborValue"
        }
      }
    },
    {
      "type": "object",
      "required": [
        "type",
        "value"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ManifestSbor"
          ]
        },
        "value": {
          "$ref": "#/definitions/ManifestSborValue"
        }
      }
    }
  ],
  "definitions": {
    "ScryptoSborValue": {
      "description": "A value model used to describe an algebraic sum type which is used to express Scrypto SBOR values. This is serialized as a discriminated union of types.",
      "oneOf": [
        {
          "description": "A boolean value which can either be true or false",
          "examples": [
            {
              "type": "Bool",
              "value": false
            },
            {
              "type": "Bool",
              "value": true
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Bool"
              ]
            },
            "value": {
              "type": "boolean"
            }
          }
        },
        {
          "description": "An 8-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "U8",
              "value": "1"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "U8"
              ]
            },
            "value": {
              "type": "string",
              "pattern": "[0-9]+"
            }
          }
        },
        {
          "description": "A 16-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "U16",
              "value": "1"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "U16"
              ]
            },
            "value": {
              "type": "string",
              "pattern": "[0-9]+"
            }
          }
        },
        {
          "description": "A 32-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "U32",
              "value": "1"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "U32"
              ]
            },
            "value": {
              "type": "string",
              "pattern": "[0-9]+"
            }
          }
        },
        {
          "description": "A 64-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "U64",
              "value": "1"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "U64"
              ]
            },
            "value": {
              "type": "string",
              "pattern": "[0-9]+"
            }
          }
        },
        {
          "description": "A 128-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "U128",
              "value": "1"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "U128"
              ]
            },
            "value": {
              "type": "string",
              "pattern": "[0-9]+"
            }
          }
        },
        {
          "description": "An 8-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "I8",
              "value": "1"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "I8"
              ]
            },
            "value": {
              "type": "string",
              "pattern": "[0-9]+"
            }
          }
        },
        {
          "description": "A 16-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "I16",
              "value": "1"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "I16"
              ]
            },
            "value": {
              "type": "string",
              "pattern": "[0-9]+"
            }
          }
        },
        {
          "description": "A 32-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "I32",
              "value": "1"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "I32"
              ]
            },
            "value": {
              "type": "string",
              "pattern": "[0-9]+"
            }
          }
        },
        {
          "description": "A 64-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "I32",
              "value": "1"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "I64"
              ]
            },
            "value": {
              "type": "string",
              "pattern": "[0-9]+"
            }
          }
        },
        {
          "description": "A 128-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "I128",
              "value": "1"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "I128"
              ]
            },
            "value": {
              "type": "string",
              "pattern": "[0-9]+"
            }
          }
        },
        {
          "description": "A type representing a string",
          "examples": [
            {
              "type": "String",
              "value": "Scrypto"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "String"
              ]
            },
            "value": {
              "type": "string"
            }
          }
        },
        {
          "description": "A Rust-style Enum which has a variant and can optionally also have a list of values (acting in a way similar to discriminated algebraic sum types)",
          "examples": [
            {
              "type": "Enum",
              "variant": 1
            },
            {
              "fields": [
                {
                  "type": "U8",
                  "value": "1"
                }
              ],
              "type": "Enum",
              "variant": 1
            }
          ],
          "type": "object",
          "required": [
            "type",
            "variant"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Enum"
              ]
            },
            "variant": {
              "description": "The variant of the enum.",
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "fields": {
              "description": "Optional fields that the enum may have",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "$ref": "#/definitions/ScryptoSborValue"
              }
            }
          }
        },
        {
          "description": "An array values of a single value kind",
          "examples": [
            {
              "element_kind": "U8",
              "elements": [
                {
                  "type": "U8",
                  "value": "1"
                },
                {
                  "type": "U8",
                  "value": "2"
                },
                {
                  "type": "U8",
                  "value": "3"
                }
              ],
              "type": "Array"
            }
          ],
          "type": "object",
          "required": [
            "element_kind",
            "elements",
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Array"
              ]
            },
            "element_kind": {
              "description": "The kind of elements that the array contains. An array will be validated to ensure that it contains a single element kind.",
              "allOf": [
                {
                  "$ref": "#/definitions/ScryptoSborValueKind"
                }
              ]
            },
            "elements": {
              "description": "The elements of the array which may contain 0 or more elements.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScryptoSborValue"
              }
            }
          }
        },
        {
          "description": "A key-value map of values where all keys are of a single kind and all values are of a single kind",
          "examples": [
            {
              "entries": [
                [
                  {
                    "type": "U8",
                    "value": "65"
                  },
                  {
                    "type": "String",
                    "value": "A"
                  }
                ],
                [
                  {
                    "type": "U8",
                    "value": "66"
                  },
                  {
                    "type": "String",
                    "value": "B"
                  }
                ]
              ],
              "key_value_kind": "U8",
              "type": "Map",
              "value_value_kind": "String"
            }
          ],
          "type": "object",
          "required": [
            "entries",
            "key_value_kind",
            "type",
            "value_value_kind"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Map"
              ]
            },
            "key_value_kind": {
              "description": "The kind of the keys used for the map. A map will be validated to ensure that its keys are all of a single kind.",
              "allOf": [
                {
                  "$ref": "#/definitions/ScryptoSborValueKind"
                }
              ]
            },
            "value_value_kind": {
              "description": "The kind of the values used for the map. A map will be validated to ensure that its values are all of a single kind.",
              "allOf": [
                {
                  "$ref": "#/definitions/ScryptoSborValueKind"
                }
              ]
            },
            "entries": {
              "description": "A vector of tuples representing the entires in the map where each tuple is made up of two elements: a key and a value.",
              "type": "array",
              "items": {
                "type": "array",
                "items": [
                  {
                    "$ref": "#/definitions/ScryptoSborValue"
                  },
                  {
                    "$ref": "#/definitions/ScryptoSborValue"
                  }
                ],
                "maxItems": 2,
                "minItems": 2
              }
            }
          }
        },
        {
          "description": "An array of elements where elements could be of different kinds.",
          "examples": [
            {
              "elements": [
                {
                  "elements": [
                    {
                      "type": "U8",
                      "value": "1"
                    },
                    {
                      "type": "String",
                      "value": "Something"
                    }
                  ],
                  "type": "Tuple"
                }
              ],
              "type": "Tuple"
            }
          ],
          "type": "object",
          "required": [
            "elements",
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Tuple"
              ]
            },
            "elements": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScryptoSborValue"
              }
            }
          }
        },
        {
          "description": "Represents a Bech32m encoded human-readable address which may be used to address a package, component, or resource. This address is serialized as a human-readable bech32m encoded string.",
          "examples": [
            {
              "address": "component_rdx1qtkryz5scup945usk39qjc2yjh6l5zsyuh8t7v5pk0tsrdcazt",
              "type": "Address"
            },
            {
              "address": "resource_rdx1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqy99qqm",
              "type": "Address"
            },
            {
              "address": "package_rdx1qyqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqpqqzrhqe8",
              "type": "Address"
            }
          ],
          "type": "object",
          "required": [
            "address",
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Address"
              ]
            },
            "address": {
              "type": "string"
            }
          }
        },
        {
          "description": "Represents a tagged enum of owned Radix Engine Nodes.",
          "examples": [
            {
              "type": "Own",
              "value": {
                "type": "Bucket",
                "value": "000000000000000000000000000000000000000000000000000000000000000000000000"
              }
            },
            {
              "type": "Own",
              "value": {
                "type": "Proof",
                "value": "000000000000000000000000000000000000000000000000000000000000000000000000"
              }
            },
            {
              "type": "Own",
              "value": {
                "type": "Vault",
                "value": "000000000000000000000000000000000000000000000000000000000000000000000000"
              }
            },
            {
              "type": "Own",
              "value": {
                "type": "Account",
                "value": "000000000000000000000000000000000000000000000000000000000000000000000000"
              }
            },
            {
              "type": "Own",
              "value": {
                "type": "Component",
                "value": "000000000000000000000000000000000000000000000000000000000000000000000000"
              }
            },
            {
              "type": "Own",
              "value": {
                "type": "KeyValueStore",
                "value": "000000000000000000000000000000000000000000000000000000000000000000000000"
              }
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Own"
              ]
            },
            "value": {
              "$ref": "#/definitions/Own"
            }
          }
        },
        {
          "description": "A Scrypto Decimal which has a precision of 18 decimal places and has a maximum and minimum of 57896044618658097711785492504343953926634992332820282019728.792003956564819967 and -57896044618658097711785492504343953926634992332820282019728.792003956564819968 respectively",
          "examples": [
            {
              "type": "Decimal",
              "value": "1"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Decimal"
              ]
            },
            "value": {
              "type": "string",
              "pattern": "[+-]?([0-9]*[.])?[0-9]+"
            }
          }
        },
        {
          "description": "A Scrypto PreciseDecimal which has a precision of 64 decimal places and has a maximum and minimum of 670390396497129854978701249910292306373968291029619668886178072186088201503677348840093714. 9083451713845015929093243025426876941405973284973216824503042047 and -670390396497129854978701249910292306373968291029619668886178072186088201503677348840093714.9083451713845015929093243025426876941405973284973216824503042048 respectively",
          "examples": [
            {
              "type": "PreciseDecimal",
              "value": "1"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PreciseDecimal"
              ]
            },
            "value": {
              "type": "string",
              "pattern": "[+-]?([0-9]*[.])?[0-9]+"
            }
          }
        },
        {
          "description": "Represents non-fungible ids which is a discriminated union of the different types that non-fungible ids may be.",
          "examples": [
            {
              "type": "NonFungibleLocalId",
              "value": {
                "type": "UUID",
                "value": "241008287272164729465721528295504357972"
              }
            },
            {
              "type": "NonFungibleLocalId",
              "value": {
                "type": "Integer",
                "value": "1"
              }
            },
            {
              "type": "NonFungibleLocalId",
              "value": {
                "type": "String",
                "value": "Scrypto"
              }
            },
            {
              "type": "NonFungibleLocalId",
              "value": {
                "type": "Bytes",
                "value": "01020304"
              }
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "NonFungibleLocalId"
              ]
            },
            "value": {
              "$ref": "#/definitions/NonFungibleLocalId"
            }
          }
        }
      ]
    },
    "ScryptoSborValueKind": {
      "oneOf": [
        {
          "description": "A boolean value which can either be true or false",
          "examples": [
            {
              "type": "Bool",
              "value": false
            },
            {
              "type": "Bool",
              "value": true
            }
          ],
          "type": "string",
          "enum": [
            "Bool"
          ]
        },
        {
          "description": "An 8-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "U8",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "U8"
          ]
        },
        {
          "description": "A 16-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "U16",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "U16"
          ]
        },
        {
          "description": "A 32-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "U32",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "U32"
          ]
        },
        {
          "description": "A 64-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "U64",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "U64"
          ]
        },
        {
          "description": "A 128-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "U128",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "U128"
          ]
        },
        {
          "description": "An 8-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "I8",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "I8"
          ]
        },
        {
          "description": "A 16-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "I16",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "I16"
          ]
        },
        {
          "description": "A 32-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "I32",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "I32"
          ]
        },
        {
          "description": "A 64-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "I32",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "I64"
          ]
        },
        {
          "description": "A 128-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "I128",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "I128"
          ]
        },
        {
          "description": "A type representing a string",
          "examples": [
            {
              "type": "String",
              "value": "Scrypto"
            }
          ],
          "type": "string",
          "enum": [
            "String"
          ]
        },
        {
          "description": "A Rust-style Enum which has a variant and can optionally also have a list of values (acting in a way similar to discriminated algebraic sum types)",
          "examples": [
            {
              "type": "Enum",
              "variant": 1
            },
            {
              "fields": [
                {
                  "type": "U8",
                  "value": "1"
                }
              ],
              "type": "Enum",
              "variant": 1
            }
          ],
          "type": "string",
          "enum": [
            "Enum"
          ]
        },
        {
          "description": "An array values of a single value kind",
          "examples": [
            {
              "element_kind": "U8",
              "elements": [
                {
                  "type": "U8",
                  "value": "1"
                },
                {
                  "type": "U8",
                  "value": "2"
                },
                {
                  "type": "U8",
                  "value": "3"
                }
              ],
              "type": "Array"
            }
          ],
          "type": "string",
          "enum": [
            "Array"
          ]
        },
        {
          "description": "A key-value map of values where all keys are of a single kind and all values are of a single kind",
          "examples": [
            {
              "entries": [
                [
                  {
                    "type": "U8",
                    "value": "65"
                  },
                  {
                    "type": "String",
                    "value": "A"
                  }
                ],
                [
                  {
                    "type": "U8",
                    "value": "66"
                  },
                  {
                    "type": "String",
                    "value": "B"
                  }
                ]
              ],
              "key_value_kind": "U8",
              "type": "Map",
              "value_value_kind": "String"
            }
          ],
          "type": "string",
          "enum": [
            "Map"
          ]
        },
        {
          "description": "An array of elements where elements could be of different kinds.",
          "examples": [
            {
              "elements": [
                {
                  "elements": [
                    {
                      "type": "U8",
                      "value": "1"
                    },
                    {
                      "type": "String",
                      "value": "Something"
                    }
                  ],
                  "type": "Tuple"
                }
              ],
              "type": "Tuple"
            }
          ],
          "type": "string",
          "enum": [
            "Tuple"
          ]
        },
        {
          "description": "Represents a Bech32m encoded human-readable address which may be used to address a package, component, or resource. This address is serialized as a human-readable bech32m encoded string.",
          "examples": [
            {
              "address": "component_rdx1qtkryz5scup945usk39qjc2yjh6l5zsyuh8t7v5pk0tsrdcazt",
              "type": "Address"
            },
            {
              "address": "resource_rdx1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqy99qqm",
              "type": "Address"
            },
            {
              "address": "package_rdx1qyqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqpqqzrhqe8",
              "type": "Address"
            }
          ],
          "type": "string",
          "enum": [
            "Address"
          ]
        },
        {
          "description": "Represents a tagged enum of owned Radix Engine Nodes.",
          "examples": [
            {
              "type": "Own",
              "value": {
                "type": "Bucket",
                "value": "000000000000000000000000000000000000000000000000000000000000000000000000"
              }
            },
            {
              "type": "Own",
              "value": {
                "type": "Proof",
                "value": "000000000000000000000000000000000000000000000000000000000000000000000000"
              }
            },
            {
              "type": "Own",
              "value": {
                "type": "Vault",
                "value": "000000000000000000000000000000000000000000000000000000000000000000000000"
              }
            },
            {
              "type": "Own",
              "value": {
                "type": "Account",
                "value": "000000000000000000000000000000000000000000000000000000000000000000000000"
              }
            },
            {
              "type": "Own",
              "value": {
                "type": "Component",
                "value": "000000000000000000000000000000000000000000000000000000000000000000000000"
              }
            },
            {
              "type": "Own",
              "value": {
                "type": "KeyValueStore",
                "value": "000000000000000000000000000000000000000000000000000000000000000000000000"
              }
            }
          ],
          "type": "string",
          "enum": [
            "Own"
          ]
        },
        {
          "description": "A Scrypto Decimal which has a precision of 18 decimal places and has a maximum and minimum of 57896044618658097711785492504343953926634992332820282019728.792003956564819967 and -57896044618658097711785492504343953926634992332820282019728.792003956564819968 respectively",
          "examples": [
            {
              "type": "Decimal",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "Decimal"
          ]
        },
        {
          "description": "A Scrypto PreciseDecimal which has a precision of 64 decimal places and has a maximum and minimum of 670390396497129854978701249910292306373968291029619668886178072186088201503677348840093714. 9083451713845015929093243025426876941405973284973216824503042047 and -670390396497129854978701249910292306373968291029619668886178072186088201503677348840093714.9083451713845015929093243025426876941405973284973216824503042048 respectively",
          "examples": [
            {
              "type": "PreciseDecimal",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "PreciseDecimal"
          ]
        },
        {
          "description": "Represents non-fungible ids which is a discriminated union of the different types that non-fungible ids may be.",
          "examples": [
            {
              "type": "NonFungibleLocalId",
              "value": {
                "type": "UUID",
                "value": "241008287272164729465721528295504357972"
              }
            },
            {
              "type": "NonFungibleLocalId",
              "value": {
                "type": "Integer",
                "value": "1"
              }
            },
            {
              "type": "NonFungibleLocalId",
              "value": {
                "type": "String",
                "value": "Scrypto"
              }
            },
            {
              "type": "NonFungibleLocalId",
              "value": {
                "type": "Bytes",
                "value": "01020304"
              }
            }
          ],
          "type": "string",
          "enum": [
            "NonFungibleLocalId"
          ]
        }
      ]
    },
    "Own": {
      "description": "Represents a tagged enum of Radix Engine Nodes which may be owned in the point of view of the transaction manifest.",
      "oneOf": [
        {
          "description": "Represents an owned KeyValueStore",
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "KeyValueStore"
              ]
            },
            "value": {
              "$ref": "#/definitions/NodeIdentifier"
            }
          }
        },
        {
          "description": "Represents an owned Account",
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Account"
              ]
            },
            "value": {
              "$ref": "#/definitions/NodeIdentifier"
            }
          }
        },
        {
          "description": "Represents an owned Component",
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Component"
              ]
            },
            "value": {
              "$ref": "#/definitions/NodeIdentifier"
            }
          }
        },
        {
          "description": "Represents an owned Vault",
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Vault"
              ]
            },
            "value": {
              "$ref": "#/definitions/NodeIdentifier"
            }
          }
        },
        {
          "description": "Represents an owned Bucket",
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Bucket"
              ]
            },
            "value": {
              "$ref": "#/definitions/NodeIdentifier"
            }
          }
        },
        {
          "description": "Represents an owned Proof",
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Proof"
              ]
            },
            "value": {
              "$ref": "#/definitions/NodeIdentifier"
            }
          }
        }
      ]
    },
    "NodeIdentifier": {
      "description": "Represents a Radix Engine persistent node identifier which is 36 bytes long and serialized as a hexadecimal string of length 72 (since hex encoding doubles the number of bytes needed.)",
      "type": "string",
      "maxLength": 72,
      "minLength": 72,
      "pattern": "[0-9a-fA-F]+"
    },
    "NonFungibleLocalId": {
      "description": "Represents non-fungible ids which is a discriminated union of the different types that non-fungible ids may be.",
      "oneOf": [
        {
          "description": "A 64 bit unsigned integer non-fungible id type which is serialized as a string",
          "examples": [
            {
              "type": "Integer",
              "value": "1"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Integer"
              ]
            },
            "value": {
              "type": "string",
              "pattern": "[0-9]+"
            }
          }
        },
        {
          "description": "A 128 bit unsigned integer UUID non-fungible id type which is serialized as a string",
          "examples": [
            {
              "type": "UUID",
              "value": "241008287272164729465721528295504357972"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "UUID"
              ]
            },
            "value": {
              "type": "string",
              "pattern": "[0-9]+"
            }
          }
        },
        {
          "description": "An byte array non-fungible id type which is serialized as a hex string. This can be between 1 and 64 bytes in length which translates to a length range of 2 and 128 when hex-encoded.",
          "examples": [
            {
              "type": "UUID",
              "value": "241008287272164729465721528295504357972"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Bytes"
              ]
            },
            "value": {
              "type": "string",
              "maxLength": 128,
              "minLength": 2,
              "pattern": "[0-9a-fA-F]+"
            }
          }
        },
        {
          "description": "A string non-fungible id. This can be between 1 and 64 characters long.",
          "examples": [
            {
              "type": "String",
              "value": "Scrypto"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "String"
              ]
            },
            "value": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1
            }
          }
        }
      ]
    },
    "ManifestSborValue": {
      "description": "A value model used to describe an algebraic sum type which is used to express Manifest SBOR values. This is serialized as a discriminated union of types.",
      "oneOf": [
        {
          "description": "A boolean value which can either be true or false",
          "examples": [
            {
              "type": "Bool",
              "value": false
            },
            {
              "type": "Bool",
              "value": true
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Bool"
              ]
            },
            "value": {
              "type": "boolean"
            }
          }
        },
        {
          "description": "An 8-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "U8",
              "value": "1"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "U8"
              ]
            },
            "value": {
              "type": "string",
              "pattern": "[0-9]+"
            }
          }
        },
        {
          "description": "A 16-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "U16",
              "value": "1"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "U16"
              ]
            },
            "value": {
              "type": "string",
              "pattern": "[0-9]+"
            }
          }
        },
        {
          "description": "A 32-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "U32",
              "value": "1"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "U32"
              ]
            },
            "value": {
              "type": "string",
              "pattern": "[0-9]+"
            }
          }
        },
        {
          "description": "A 64-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "U64",
              "value": "1"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "U64"
              ]
            },
            "value": {
              "type": "string",
              "pattern": "[0-9]+"
            }
          }
        },
        {
          "description": "A 128-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "U128",
              "value": "1"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "U128"
              ]
            },
            "value": {
              "type": "string",
              "pattern": "[0-9]+"
            }
          }
        },
        {
          "description": "An 8-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "I8",
              "value": "1"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "I8"
              ]
            },
            "value": {
              "type": "string",
              "pattern": "[0-9]+"
            }
          }
        },
        {
          "description": "A 16-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "I16",
              "value": "1"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "I16"
              ]
            },
            "value": {
              "type": "string",
              "pattern": "[0-9]+"
            }
          }
        },
        {
          "description": "A 32-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "I32",
              "value": "1"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "I32"
              ]
            },
            "value": {
              "type": "string",
              "pattern": "[0-9]+"
            }
          }
        },
        {
          "description": "A 64-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "I64",
              "value": "1"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "I64"
              ]
            },
            "value": {
              "type": "string",
              "pattern": "[0-9]+"
            }
          }
        },
        {
          "description": "A 128-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "I128",
              "value": "1"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "I128"
              ]
            },
            "value": {
              "type": "string",
              "pattern": "[0-9]+"
            }
          }
        },
        {
          "description": "A type representing a string",
          "examples": [
            {
              "type": "String",
              "value": "Scrypto"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "String"
              ]
            },
            "value": {
              "type": "string"
            }
          }
        },
        {
          "description": "A Rust-style Enum which has a variant and can optionally also have a list of values (acting in a way similar to discriminated algebraic sum types)",
          "examples": [
            {
              "type": "Enum",
              "variant": 1
            },
            {
              "fields": [
                {
                  "type": "U8",
                  "value": "1"
                }
              ],
              "type": "Enum",
              "variant": 1
            }
          ],
          "type": "object",
          "required": [
            "type",
            "variant"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Enum"
              ]
            },
            "variant": {
              "description": "The variant of the enum.",
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "fields": {
              "description": "Optional fields that the enum may have",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "$ref": "#/definitions/ManifestSborValue"
              }
            }
          }
        },
        {
          "description": "An array values of a single value kind",
          "examples": [
            {
              "element_kind": "U8",
              "elements": [
                {
                  "type": "U8",
                  "value": "1"
                },
                {
                  "type": "U8",
                  "value": "2"
                },
                {
                  "type": "U8",
                  "value": "3"
                }
              ],
              "type": "Array"
            }
          ],
          "type": "object",
          "required": [
            "element_kind",
            "elements",
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Array"
              ]
            },
            "element_kind": {
              "description": "The kind of elements that the array contains. An array will be validated to ensure that it contains a single element kind.",
              "allOf": [
                {
                  "$ref": "#/definitions/ManifestSborValueKind"
                }
              ]
            },
            "elements": {
              "description": "The elements of the array which may contain 0 or more elements.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ManifestSborValue"
              }
            }
          }
        },
        {
          "description": "A key-value map of values where all keys are of a single kind and all values are of a single kind",
          "examples": [
            {
              "entries": [
                [
                  {
                    "type": "U8",
                    "value": "65"
                  },
                  {
                    "type": "String",
                    "value": "A"
                  }
                ],
                [
                  {
                    "type": "U8",
                    "value": "66"
                  },
                  {
                    "type": "String",
                    "value": "B"
                  }
                ]
              ],
              "key_value_kind": "U8",
              "type": "Map",
              "value_value_kind": "String"
            }
          ],
          "type": "object",
          "required": [
            "entries",
            "key_value_kind",
            "type",
            "value_value_kind"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Map"
              ]
            },
            "key_value_kind": {
              "description": "The kind of the keys used for the map. A map will be validated to ensure that its keys are all of a single kind.",
              "allOf": [
                {
                  "$ref": "#/definitions/ManifestSborValueKind"
                }
              ]
            },
            "value_value_kind": {
              "description": "The kind of the values used for the map. A map will be validated to ensure that its values are all of a single kind.",
              "allOf": [
                {
                  "$ref": "#/definitions/ManifestSborValueKind"
                }
              ]
            },
            "entries": {
              "description": "A vector of tuples representing the entires in the map where each tuple is made up of two elements: a key and a value.",
              "type": "array",
              "items": {
                "type": "array",
                "items": [
                  {
                    "$ref": "#/definitions/ManifestSborValue"
                  },
                  {
                    "$ref": "#/definitions/ManifestSborValue"
                  }
                ],
                "maxItems": 2,
                "minItems": 2
              }
            }
          }
        },
        {
          "description": "An array of elements where elements could be of different kinds.",
          "examples": [
            {
              "elements": [
                {
                  "elements": [
                    {
                      "type": "U8",
                      "value": "1"
                    },
                    {
                      "type": "String",
                      "value": "Something"
                    }
                  ],
                  "type": "Tuple"
                }
              ],
              "type": "Tuple"
            }
          ],
          "type": "object",
          "required": [
            "elements",
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Tuple"
              ]
            },
            "elements": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ManifestSborValue"
              }
            }
          }
        },
        {
          "description": "Represents a Bech32m encoded human-readable address which may be used to address a package, component, or resource. This address is serialized as a human-readable bech32m encoded string.",
          "examples": [
            {
              "address": "component_rdx1qtkryz5scup945usk39qjc2yjh6l5zsyuh8t7v5pk0tsrdcazt",
              "type": "Address"
            },
            {
              "address": "resource_rdx1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqy99qqm",
              "type": "Address"
            },
            {
              "address": "package_rdx1qyqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqpqqzrhqe8",
              "type": "Address"
            }
          ],
          "type": "object",
          "required": [
            "address",
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Address"
              ]
            },
            "address": {
              "type": "string"
            }
          }
        },
        {
          "description": "Represents a Scrypto bucket which is identified through a transient identifier which is a 32-bit integer which is serialized as a Integer.",
          "examples": [
            {
              "identifier": 1,
              "type": "Bucket"
            }
          ],
          "type": "object",
          "required": [
            "identifier",
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Bucket"
              ]
            },
            "identifier": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            }
          }
        },
        {
          "description": "Represents a Scrypto proof which is identified through a transient identifier which is a 32-bit integer which is serialized as a Integer.",
          "examples": [
            {
              "identifier": 1,
              "type": "Proof"
            }
          ],
          "type": "object",
          "required": [
            "identifier",
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Proof"
              ]
            },
            "identifier": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            }
          }
        },
        {
          "description": "A Scrypto Decimal which has a precision of 18 decimal places and has a maximum and minimum of 57896044618658097711785492504343953926634992332820282019728.792003956564819967 and -57896044618658097711785492504343953926634992332820282019728.792003956564819968 respectively",
          "examples": [
            {
              "type": "Decimal",
              "value": "1"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Decimal"
              ]
            },
            "value": {
              "type": "string",
              "pattern": "[+-]?([0-9]*[.])?[0-9]+"
            }
          }
        },
        {
          "description": "A Scrypto PreciseDecimal which has a precision of 64 decimal places and has a maximum and minimum of 670390396497129854978701249910292306373968291029619668886178072186088201503677348840093714. 9083451713845015929093243025426876941405973284973216824503042047 and -670390396497129854978701249910292306373968291029619668886178072186088201503677348840093714.9083451713845015929093243025426876941405973284973216824503042048 respectively",
          "examples": [
            {
              "type": "PreciseDecimal",
              "value": "1"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PreciseDecimal"
              ]
            },
            "value": {
              "type": "string",
              "pattern": "[+-]?([0-9]*[.])?[0-9]+"
            }
          }
        },
        {
          "description": "Represents non-fungible ids which is a discriminated union of the different types that non-fungible ids may be.",
          "examples": [
            {
              "type": "NonFungibleLocalId",
              "value": {
                "type": "UUID",
                "value": "241008287272164729465721528295504357972"
              }
            },
            {
              "type": "NonFungibleLocalId",
              "value": {
                "type": "Integer",
                "value": "1"
              }
            },
            {
              "type": "NonFungibleLocalId",
              "value": {
                "type": "String",
                "value": "Scrypto"
              }
            },
            {
              "type": "NonFungibleLocalId",
              "value": {
                "type": "Bytes",
                "value": "01020304"
              }
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "NonFungibleLocalId"
              ]
            },
            "value": {
              "$ref": "#/definitions/NonFungibleLocalId"
            }
          }
        },
        {
          "description": "Represents a transaction manifest expression.",
          "examples": [
            {
              "type": "Expression",
              "value": "ENTIRE_AUTH_ZONE"
            },
            {
              "type": "Expression",
              "value": "ENTIRE_WORKTOP"
            }
          ],
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Expression"
              ]
            },
            "value": {
              "$ref": "#/definitions/Expression"
            }
          }
        },
        {
          "description": "Represents the hash of a blob provided as part of a transaction manifest. This is represented as a byte array of 32 bytes which is serialized as a hex string.",
          "examples": [
            {
              "hash": "d28d2c3710601fbc097000ec73455693f4861dc0eb7c90d8821f2a13f617313e",
              "type": "Blob"
            }
          ],
          "type": "object",
          "required": [
            "hash",
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Blob"
              ]
            },
            "hash": {
              "$ref": "#/definitions/Blob"
            }
          }
        }
      ]
    },
    "ManifestSborValueKind": {
      "oneOf": [
        {
          "description": "A boolean value which can either be true or false",
          "examples": [
            {
              "type": "Bool",
              "value": false
            },
            {
              "type": "Bool",
              "value": true
            }
          ],
          "type": "string",
          "enum": [
            "Bool"
          ]
        },
        {
          "description": "An 8-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "U8",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "U8"
          ]
        },
        {
          "description": "A 16-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "U16",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "U16"
          ]
        },
        {
          "description": "A 32-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "U32",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "U32"
          ]
        },
        {
          "description": "A 64-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "U64",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "U64"
          ]
        },
        {
          "description": "A 128-bit unsigned integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "U128",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "U128"
          ]
        },
        {
          "description": "An 8-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "I8",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "I8"
          ]
        },
        {
          "description": "A 16-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "I16",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "I16"
          ]
        },
        {
          "description": "A 32-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "I32",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "I32"
          ]
        },
        {
          "description": "A 64-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "I64",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "I64"
          ]
        },
        {
          "description": "A 128-bit signed integer which is serialized and deserialized as a string.",
          "examples": [
            {
              "type": "I128",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "I128"
          ]
        },
        {
          "description": "A type representing a string",
          "examples": [
            {
              "type": "String",
              "value": "Scrypto"
            }
          ],
          "type": "string",
          "enum": [
            "String"
          ]
        },
        {
          "description": "A Rust-style Enum which has a variant and can optionally also have a list of values (acting in a way similar to discriminated algebraic sum types)",
          "examples": [
            {
              "type": "Enum",
              "variant": 1
            },
            {
              "fields": [
                {
                  "type": "U8",
                  "value": "1"
                }
              ],
              "type": "Enum",
              "variant": 1
            }
          ],
          "type": "string",
          "enum": [
            "Enum"
          ]
        },
        {
          "description": "An array values of a single value kind",
          "examples": [
            {
              "element_kind": "U8",
              "elements": [
                {
                  "type": "U8",
                  "value": "1"
                },
                {
                  "type": "U8",
                  "value": "2"
                },
                {
                  "type": "U8",
                  "value": "3"
                }
              ],
              "type": "Array"
            }
          ],
          "type": "string",
          "enum": [
            "Array"
          ]
        },
        {
          "description": "A key-value map of values where all keys are of a single kind and all values are of a single kind",
          "examples": [
            {
              "entries": [
                [
                  {
                    "type": "U8",
                    "value": "65"
                  },
                  {
                    "type": "String",
                    "value": "A"
                  }
                ],
                [
                  {
                    "type": "U8",
                    "value": "66"
                  },
                  {
                    "type": "String",
                    "value": "B"
                  }
                ]
              ],
              "key_value_kind": "U8",
              "type": "Map",
              "value_value_kind": "String"
            }
          ],
          "type": "string",
          "enum": [
            "Map"
          ]
        },
        {
          "description": "An array of elements where elements could be of different kinds.",
          "examples": [
            {
              "elements": [
                {
                  "elements": [
                    {
                      "type": "U8",
                      "value": "1"
                    },
                    {
                      "type": "String",
                      "value": "Something"
                    }
                  ],
                  "type": "Tuple"
                }
              ],
              "type": "Tuple"
            }
          ],
          "type": "string",
          "enum": [
            "Tuple"
          ]
        },
        {
          "description": "Represents a Bech32m encoded human-readable address which may be used to address a package, component, or resource. This address is serialized as a human-readable bech32m encoded string.",
          "examples": [
            {
              "address": "component_rdx1qtkryz5scup945usk39qjc2yjh6l5zsyuh8t7v5pk0tsrdcazt",
              "type": "Address"
            },
            {
              "address": "resource_rdx1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqy99qqm",
              "type": "Address"
            },
            {
              "address": "package_rdx1qyqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqpqqzrhqe8",
              "type": "Address"
            }
          ],
          "type": "string",
          "enum": [
            "Address"
          ]
        },
        {
          "description": "Represents a Scrypto bucket which is identified through a transient identifier which is a 32-bit integer which is serialized as a Integer.",
          "examples": [
            {
              "identifier": 1,
              "type": "Bucket"
            }
          ],
          "type": "string",
          "enum": [
            "Bucket"
          ]
        },
        {
          "description": "Represents a Scrypto proof which is identified through a transient identifier which is a 32-bit integer which is serialized as a Integer.",
          "examples": [
            {
              "identifier": 1,
              "type": "Proof"
            }
          ],
          "type": "string",
          "enum": [
            "Proof"
          ]
        },
        {
          "description": "A Scrypto Decimal which has a precision of 18 decimal places and has a maximum and minimum of 57896044618658097711785492504343953926634992332820282019728.792003956564819967 and -57896044618658097711785492504343953926634992332820282019728.792003956564819968 respectively",
          "examples": [
            {
              "type": "Decimal",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "Decimal"
          ]
        },
        {
          "description": "A Scrypto PreciseDecimal which has a precision of 64 decimal places and has a maximum and minimum of 670390396497129854978701249910292306373968291029619668886178072186088201503677348840093714. 9083451713845015929093243025426876941405973284973216824503042047 and -670390396497129854978701249910292306373968291029619668886178072186088201503677348840093714.9083451713845015929093243025426876941405973284973216824503042048 respectively",
          "examples": [
            {
              "type": "PreciseDecimal",
              "value": "1"
            }
          ],
          "type": "string",
          "enum": [
            "PreciseDecimal"
          ]
        },
        {
          "description": "Represents non-fungible ids which is a discriminated union of the different types that non-fungible ids may be.",
          "examples": [
            {
              "type": "NonFungibleLocalId",
              "value": {
                "type": "UUID",
                "value": "241008287272164729465721528295504357972"
              }
            },
            {
              "type": "NonFungibleLocalId",
              "value": {
                "type": "Integer",
                "value": "1"
              }
            },
            {
              "type": "NonFungibleLocalId",
              "value": {
                "type": "String",
                "value": "Scrypto"
              }
            },
            {
              "type": "NonFungibleLocalId",
              "value": {
                "type": "Bytes",
                "value": "01020304"
              }
            }
          ],
          "type": "string",
          "enum": [
            "NonFungibleLocalId"
          ]
        },
        {
          "description": "Represents a transaction manifest expression.",
          "examples": [
            {
              "type": "Expression",
              "value": "ENTIRE_AUTH_ZONE"
            },
            {
              "type": "Expression",
              "value": "ENTIRE_WORKTOP"
            }
          ],
          "type": "string",
          "enum": [
            "Expression"
          ]
        },
        {
          "description": "Represents the hash of a blob provided as part of a transaction manifest. This is represented as a byte array of 32 bytes which is serialized as a hex string.",
          "examples": [
            {
              "hash": "d28d2c3710601fbc097000ec73455693f4861dc0eb7c90d8821f2a13f617313e",
              "type": "Blob"
            }
          ],
          "type": "string",
          "enum": [
            "Blob"
          ]
        }
      ]
    },
    "Expression": {
      "description": "Represents a transaction manifest expression.",
      "type": "string",
      "enum": [
        "ENTIRE_WORKTOP",
        "ENTIRE_AUTH_ZONE"
      ]
    },
    "Blob": {
      "description": "Represents the hash of a blob provided as part of a transaction manifest. This is represented as a byte array of 32 bytes which is serialized as a hex string.",
      "type": "string",
      "maxLength": 64,
      "minLength": 64,
      "pattern": "[0-9a-fA-F]+"
    }
  }
}