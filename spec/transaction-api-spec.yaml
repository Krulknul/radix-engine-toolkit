openapi: 3.0.3
info:
  title: Radix Engine Toolkit
  description: "A Rust library with multiple compilation targets that aims to make the creation and decompilation of transactions possible with clients written in any language."
  version: 0.1.0
servers: []
paths: {}
components:
  schemas:
    # ===================
    # Request & Response
    # ===================

    # Information
    InformationRequest:
      type: object
      description: "This object represents the request for information on the Radix Engine Toolkit."
      additionalProperties: false

    InformationResponse:
      type: object
      description: "The response returned from an `InformationRequest`. This response contains the version of the Radix Engine Toolkit currently in use."
      additionalProperties: false
      required:
        - package_version
      properties:
        package_version:
          type: string
      example:
        package_version: "0.1.0"

    # Convert Manifest
    ConvertManifestRequest:
      type: object
      description: "A request to take a transaction manifest and convert it from one format to another. Currently, this request allows for the conversion of a transaction manifest from and to String and JSON."
      additionalProperties: false
      required:
        - transaction_version
        - network_id
        - manifest_instructions_output_format
        - manifest
      properties:
        transaction_version:
          description: "An 8-bit unsigned integer representing the transaction version. Currently, the library only supports a transaction version of 1."
          $ref: "#/components/schemas/Byte"
        network_id:
          description: "An 8-bit unsigned integer representing the network id that the manifest is for"
          $ref: "#/components/schemas/Byte"
        manifest_instructions_output_format:
          description: "The format that the manifest should be returned in. Currently, this could either be `JSON` or `String`."
          $ref: "#/components/schemas/ManifestInstructionsKind"
        manifest:
          description: "The transaction manifest to convert to the format specified in `manifest_instructions_output_format`. This is a complete transaction manifest along side the blobs required."
          $ref: "#/components/schemas/TransactionManifest"
      example:
        transaction_version: 0
        network_id: 0xF2
        manifest_instructions_output_format: "JSON"
        manifest:
          instructions:
            type: "String"
            value: "DROP_ALL_PROOFS;"
          blobs: []

    ConvertManifestResponse:
      description: "The response returned from a `ConvertManifestRequest` containing the manifest after it has been converted to the type specified in the `manifest_instructions_output_format` field of the request."
      $ref: "#/components/schemas/TransactionManifest"

    # Compile Transaction Intent
    CompileTransactionIntentRequest:
      description: "A request to compile a transaction intent to its SBOR-encoded representation"
      $ref: "#/components/schemas/TransactionIntent"

    CompileTransactionIntentResponse:
      type: object
      description: "The response to the `CompileTransactionIntentRequest` containing the compiled transaction intent as a hex-encoded string"
      additionalProperties: false
      required:
        - compiled_intent
      properties:
        compiled_intent:
          type: string
          description: "The hex-encoded string of the compiled transaction intent"
      example:
        compiled_intent: "10020000001009000000070107f20a00000000000000000a20000000000000000a00000000000000009121000000031c3796382de8e6e7a1aacb069221e43943af8be417d4c8c92dca7c4b07f9396901000900000000090000000010010000003011130000000a00000043616c6c4d6574686f6403000000811b00000003d43f479e9b2beb9df98bc3888344fc25eda181e8f710ce1bf1de0c1200000077697468647261775f62795f616d6f756e7430074a0000001002000000a1200000000000f44482916345000000000000000000000000000000000000000000000000b61b0000000000000000000000000000000000000000000000000000000000041700000054616b6546726f6d576f726b746f704279416d6f756e7402000000a1200000000000c84e676dc11b000000000000000000000000000000000000000000000000b61b0000000000000000000000000000000000000000000000000000000000040a00000043616c6c4d6574686f6403000000811b0000000292566c83de7fd6b04fcc92b5e04b03228ccff040785673278ef10c0b0000006275795f67756d62616c6c30070e0000001001000000b104000000000200001d000000417373657274576f726b746f70436f6e7461696e734279416d6f756e7402000000a12000000000002cf61a24a229000000000000000000000000000000000000000000000000b61b00000000000000000000000000000000000000000000000000000000000415000000417373657274576f726b746f70436f6e7461696e7301000000b61b00000000aedb7960d1f87dc25138f4cd101da6c98d57323478d53c5fb9510f00000054616b6546726f6d576f726b746f7001000000b61b0000000000000000000000000000000000000000000000000000000000041500000043726561746550726f6f6646726f6d4275636b65740100000009010200000a000000436c6f6e6550726f6f660100000009020200000900000044726f7050726f6f660100000009020200000900000044726f7050726f6f660100000009030200000a00000043616c6c4d6574686f6403000000811b00000003d43f479e9b2beb9df98bc3888344fc25eda181e8f710ce1bf1de0c160000006372656174655f70726f6f665f62795f616d6f756e7430074a0000001002000000a1200000000000f44482916345000000000000000000000000000000000000000000000000b61b0000000000000000000000000000000000000000000000000000000000040f000000506f7046726f6d417574685a6f6e65000000000900000044726f7050726f6f660100000009040200000f00000052657475726e546f576f726b746f700100000009010200001400000054616b6546726f6d576f726b746f7042794964730200000031b402000000050000000905000000050000000907000000b61b0000000000000000000000000000000000000000000000000000000000041a00000043616c6c4d6574686f6457697468416c6c5265736f757263657302000000811b00000003d43f479e9b2beb9df98bc3888344fc25eda181e8f710ce1bf1de0c0d0000006465706f7369745f62617463680d00000044726f70416c6c50726f6f6673000000000e0000005075626c6973685061636b616765010000003007d200000010020000003007c00000000061736d010000000405017001010105030100100619037f01418080c0000b7f00418080c0000b7f00418080c0000b072503066d656d6f727902000a5f5f646174615f656e6403010b5f5f686561705f6261736503020019046e616d65071201000f5f5f737461636b5f706f696e746572004d0970726f64756365727302086c616e6775616765010452757374000c70726f6365737365642d6279010572757374631d312e35392e30202839643162323130366520323032322d30322d323329320c10000000000a00000043616c6c4d6574686f6403000000811b0000000292566c83de7fd6b04fcc92b5e04b03228ccff040785673278ef10c12000000636f6d706c6963617465645f6d6574686f6430076f0000001002000000a120000000000064a7b3b6e00d000000000000000000000000000000000000000000000000a2400000000000000000000000023ed47ec9da71dcda2f4fb5e9f37fd2079e3000000000000000000000000000000000000000000000000000000000000000000000000000"

    # Decompile Transaction Intent
    DecompileTransactionIntentRequest:
      description: "A request to take the SBOR-encoded compiled transaction intent and decompile it into a format supported by the library (either `JSON` or `String`)"
      allOf:
        - $ref: "#/components/schemas/CompileTransactionIntentResponse"
        - type: object
          additionalProperties: false
          required:
            - manifest_instructions_output_format
          properties:
            manifest_instructions_output_format:
              description: "The format that the manifest should be returned in. Currently, this could either be `JSON` or `String`."
              $ref: "#/components/schemas/ManifestInstructionsKind"
      example:
        compiled_intent: "10020000001009000000070107f20a00000000000000000a20000000000000000a00000000000000009121000000031c3796382de8e6e7a1aacb069221e43943af8be417d4c8c92dca7c4b07f9396901000900000000090000000010010000003011130000000a00000043616c6c4d6574686f6403000000811b00000003d43f479e9b2beb9df98bc3888344fc25eda181e8f710ce1bf1de0c1200000077697468647261775f62795f616d6f756e7430074a0000001002000000a1200000000000f44482916345000000000000000000000000000000000000000000000000b61b0000000000000000000000000000000000000000000000000000000000041700000054616b6546726f6d576f726b746f704279416d6f756e7402000000a1200000000000c84e676dc11b000000000000000000000000000000000000000000000000b61b0000000000000000000000000000000000000000000000000000000000040a00000043616c6c4d6574686f6403000000811b0000000292566c83de7fd6b04fcc92b5e04b03228ccff040785673278ef10c0b0000006275795f67756d62616c6c30070e0000001001000000b104000000000200001d000000417373657274576f726b746f70436f6e7461696e734279416d6f756e7402000000a12000000000002cf61a24a229000000000000000000000000000000000000000000000000b61b00000000000000000000000000000000000000000000000000000000000415000000417373657274576f726b746f70436f6e7461696e7301000000b61b00000000aedb7960d1f87dc25138f4cd101da6c98d57323478d53c5fb9510f00000054616b6546726f6d576f726b746f7001000000b61b0000000000000000000000000000000000000000000000000000000000041500000043726561746550726f6f6646726f6d4275636b65740100000009010200000a000000436c6f6e6550726f6f660100000009020200000900000044726f7050726f6f660100000009020200000900000044726f7050726f6f660100000009030200000a00000043616c6c4d6574686f6403000000811b00000003d43f479e9b2beb9df98bc3888344fc25eda181e8f710ce1bf1de0c160000006372656174655f70726f6f665f62795f616d6f756e7430074a0000001002000000a1200000000000f44482916345000000000000000000000000000000000000000000000000b61b0000000000000000000000000000000000000000000000000000000000040f000000506f7046726f6d417574685a6f6e65000000000900000044726f7050726f6f660100000009040200000f00000052657475726e546f576f726b746f700100000009010200001400000054616b6546726f6d576f726b746f7042794964730200000031b402000000050000000905000000050000000907000000b61b0000000000000000000000000000000000000000000000000000000000041a00000043616c6c4d6574686f6457697468416c6c5265736f757263657302000000811b00000003d43f479e9b2beb9df98bc3888344fc25eda181e8f710ce1bf1de0c0d0000006465706f7369745f62617463680d00000044726f70416c6c50726f6f6673000000000e0000005075626c6973685061636b616765010000003007d200000010020000003007c00000000061736d010000000405017001010105030100100619037f01418080c0000b7f00418080c0000b7f00418080c0000b072503066d656d6f727902000a5f5f646174615f656e6403010b5f5f686561705f6261736503020019046e616d65071201000f5f5f737461636b5f706f696e746572004d0970726f64756365727302086c616e6775616765010452757374000c70726f6365737365642d6279010572757374631d312e35392e30202839643162323130366520323032322d30322d323329320c10000000000a00000043616c6c4d6574686f6403000000811b0000000292566c83de7fd6b04fcc92b5e04b03228ccff040785673278ef10c12000000636f6d706c6963617465645f6d6574686f6430076f0000001002000000a120000000000064a7b3b6e00d000000000000000000000000000000000000000000000000a2400000000000000000000000023ed47ec9da71dcda2f4fb5e9f37fd2079e3000000000000000000000000000000000000000000000000000000000000000000000000000"
        manifest_instructions_output_format: "JSON"

    DecompileTransactionIntentResponse:
      $ref: "#/components/schemas/TransactionIntent"
      description: "The response to the `DecompileTransactionIntentRequest` containing the decompiled transaction intent"

    # Compile Signed Transaction Intent
    CompileSignedTransactionIntentRequest:
      $ref: "#/components/schemas/SignedTransactionIntent"
      description: "A request to compile a signed transaction intent to its SBOR-encoded representation"

    CompileSignedTransactionIntentResponse:
      type: object
      description: "The response to the `CompileSignedTransactionIntentRequest` request containing the compiled signed transaction intent as a hex-encoded string"
      additionalProperties: false
      required:
        - compiled_signed_intent
      properties:
        compiled_signed_intent:
          type: string
          description: "The hex-encoded string of the compiled signed transaction intent"
      example:
        compiled_signed_intent: "100200000010020000001009000000070107f20a00000000000000000a20000000000000000a00000000000000009121000000031c3796382de8e6e7a1aacb069221e43943af8be417d4c8c92dca7c4b07f9396901000900000000090000000010010000003011130000000a00000043616c6c4d6574686f6403000000811b00000003d43f479e9b2beb9df98bc3888344fc25eda181e8f710ce1bf1de0c1200000077697468647261775f62795f616d6f756e7430074a0000001002000000a1200000000000f44482916345000000000000000000000000000000000000000000000000b61b0000000000000000000000000000000000000000000000000000000000041700000054616b6546726f6d576f726b746f704279416d6f756e7402000000a1200000000000c84e676dc11b000000000000000000000000000000000000000000000000b61b0000000000000000000000000000000000000000000000000000000000040a00000043616c6c4d6574686f6403000000811b0000000292566c83de7fd6b04fcc92b5e04b03228ccff040785673278ef10c0b0000006275795f67756d62616c6c30070e0000001001000000b104000000000200001d000000417373657274576f726b746f70436f6e7461696e734279416d6f756e7402000000a12000000000002cf61a24a229000000000000000000000000000000000000000000000000b61b00000000000000000000000000000000000000000000000000000000000415000000417373657274576f726b746f70436f6e7461696e7301000000b61b00000000aedb7960d1f87dc25138f4cd101da6c98d57323478d53c5fb9510f00000054616b6546726f6d576f726b746f7001000000b61b0000000000000000000000000000000000000000000000000000000000041500000043726561746550726f6f6646726f6d4275636b65740100000009010200000a000000436c6f6e6550726f6f660100000009020200000900000044726f7050726f6f660100000009020200000900000044726f7050726f6f660100000009030200000a00000043616c6c4d6574686f6403000000811b00000003d43f479e9b2beb9df98bc3888344fc25eda181e8f710ce1bf1de0c160000006372656174655f70726f6f665f62795f616d6f756e7430074a0000001002000000a1200000000000f44482916345000000000000000000000000000000000000000000000000b61b0000000000000000000000000000000000000000000000000000000000040f000000506f7046726f6d417574685a6f6e65000000000900000044726f7050726f6f660100000009040200000f00000052657475726e546f576f726b746f700100000009010200001400000054616b6546726f6d576f726b746f7042794964730200000031b402000000050000000905000000050000000907000000b61b0000000000000000000000000000000000000000000000000000000000041a00000043616c6c4d6574686f6457697468416c6c5265736f757263657302000000811b00000003d43f479e9b2beb9df98bc3888344fc25eda181e8f710ce1bf1de0c0d0000006465706f7369745f62617463680d00000044726f70416c6c50726f6f6673000000000e0000005075626c6973685061636b616765010000003007d200000010020000003007c00000000061736d010000000405017001010105030100100619037f01418080c0000b7f00418080c0000b7f00418080c0000b072503066d656d6f727902000a5f5f646174615f656e6403010b5f5f686561705f6261736503020019046e616d65071201000f5f5f737461636b5f706f696e746572004d0970726f64756365727302086c616e6775616765010452757374000c70726f6365737365642d6279010572757374631d312e35392e30202839643162323130366520323032322d30322d323329320c10000000000a00000043616c6c4d6574686f6403000000811b0000000292566c83de7fd6b04fcc92b5e04b03228ccff040785673278ef10c12000000636f6d706c6963617465645f6d6574686f6430076f0000001002000000a120000000000064a7b3b6e00d000000000000000000000000000000000000000000000000a2400000000000000000000000023ed47ec9da71dcda2f4fb5e9f37fd2079e300000000000000000000000000000000000000000000000000000000000000000000000000030210400000002000000912100000002e6dc9dc1d1b418aab0a30089623f2dd4bab8f1ee9262a3ac0340cddb98b944379240000000437849b37df54d58e49b37e0004fb92a7133491efdc5332e7ace2d69f6f73df5636bb4f65943bdb59facd400dc06e2b1386a19327c8e85ea5e404ef502ef6fbb02000000912100000002b2bb8940c7acb5a221c4efab35b1c77afaddc611106ff4625e31d45cc17c42259240000000c215331bb6319fd26dee491824345375e9d8936cd69d6645c8e06222bcdae4b061305e640781b84b63cb23c719eb0edb43fd2e3df04b5990434cff44a02a85a402000000912100000003e0366ffa0c2db669c4a7b671109309a25eb1511350aa34bf22415bc03d57fc1292400000008c6b942f5ef8d81116120102fb4f22796c00a1aea556082d1af1d8529733e7124582b49c2bdc1545cb9d90bbdbedcf8185d16d6df5d76584cdf12688e07d919b0200000091210000000362d5d7de2ddb98e35ac84e59c4767e1d024a95f68893af469c361f74ea08fa499240000000ba40502e403bd49db22369a9b93cbd08bf9ab10b643b237cf9ee40bb931c12d927faad0c6a5ea6a334b1432b7047f5f8293f06fc37d229b560f50f71b84b9768"

    # Decompile Signed Transaction Intent
    DecompileSignedTransactionIntentRequest:
      description: "A request to take the SBOR-encoded compiled signed transaction intent and decompile it into a format supported by the library (either `JSON` or `String`)"
      allOf:
        - $ref: "#/components/schemas/CompileSignedTransactionIntentResponse"
        - type: object
          additionalProperties: false
          required:
            - manifest_instructions_output_format
          properties:
            manifest_instructions_output_format:
              description: "The format that the manifest should be returned in. Currently, this could either be `JSON` or `String`."
              $ref: "#/components/schemas/ManifestInstructionsKind"

    DecompileSignedTransactionIntentResponse:
      $ref: "#/components/schemas/SignedTransactionIntent"
      description: "The response to the `DecompileSignedTransactionIntentRequest` containing the decompiled signed transaction intent"

    # Compile Notarized Transaction Intent
    CompileNotarizedTransactionRequest:
      $ref: "#/components/schemas/NotarizedTransaction"
      description: "A request to compile a notarized transaction intent to its SBOR-encoded representation"

    CompileNotarizedTransactionResponse:
      type: object
      description: "The response to the `CompileNotarizedTransactionRequest` request containing the compiled notarized transaction intent as a hex-encoded string"
      additionalProperties: false
      required:
        - compiled_notarized_intent
      properties:
        compiled_notarized_intent:
          type: string

    # Decompile Notarized Transaction Intent
    DecompileNotarizedTransactionRequest:
      description: "A request to take the SBOR-encoded compiled notarized transaction intent and decompile it into a format supported by the library (either `JSON` or `String`)"
      allOf:
        - $ref: "#/components/schemas/CompileNotarizedTransactionResponse"
        - type: object
          additionalProperties: false
          required:
            - manifest_instructions_output_format
          properties:
            manifest_instructions_output_format:
              description: "The format that the manifest should be returned in. Currently, this could either be `JSON` or `String`."
              $ref: "#/components/schemas/ManifestInstructionsKind"

    DecompileNotarizedTransactionResponse:
      description: "The response to the `DecompileNotarizedTransactionRequest` containing the decompiled notarized transaction intent"
      $ref: "#/components/schemas/NotarizedTransaction"

    # Decompile Unknown Transaction Intent
    DecompileUnknownTransactionIntentRequest:
      type: object
      description: "A request to decompile a compiled transaction intent of an unknown format to "
      additionalProperties: false
      required:
        - manifest_instructions_output_format
        - compiled_unknown_intent
      properties:
        manifest_instructions_output_format:
          description: "The format that the manifest should be returned in. Currently, this could either be `JSON` or `String`."
          $ref: "#/components/schemas/ManifestInstructionsKind"
        compiled_unknown_intent:
          type: string
          description: "The unknown transaction intent provided as a hex-encoded string"

    DecompileUnknownTransactionIntentResponse:
      description: "The response to the `DecompileUnknownTransactionIntentRequest` containing the decompiled transaction intent"
      anyOf:
        - $ref: "#/components/schemas/DecompileTransactionIntentResponse"
        - $ref: "#/components/schemas/DecompileSignedTransactionIntentResponse"
        - $ref: "#/components/schemas/DecompileNotarizedTransactionResponse"

    # Address Encoding
    EncodeAddressRequest:
      type: object
      description: "A request to encode an addresss in Bech32m according with the HRPs specified by the `network_id`"
      additionalProperties: false
      required:
        - address
        - network_id
      properties:
        address:
          type: string
          description: "A hex-encoded string of the raw bytes that make up the address"
        network_id:
          description: "An 8-bit unsigned integer representing the network id that the address is for"
          $ref: "#/components/schemas/Byte"
      example:
        address: "01ce8be5eb98800c15e6942d27e373599c18a19e08a53378341d2a"
        network_id: 1

    EncodeAddressResponse:
      $ref: "#/components/schemas/Address"
      description: "The response to the `EncodeAddressRequest` containing the encoded address"
      example:
        type: "PackageAddress"
        address: "package_rdx1q88ghe0tnzqqc90xjskj0cmntxwp3gv7pzjnx7p5r54q5e29qu"

    # Address Decoding
    DecodeAddressRequest:
      type: object
      description: "A request to decode a Bech32m-encoded address into its hrp, data, and entity type"
      additionalProperties: false
      required:
        - address
      properties:
        address:
          type: string
          description: "The bech32m-encoded address string to decode"

    DecodeAddressResponse:
      type: object
      description: "The response to the `DecodeAddressRequest` containing the deocded address"
      additionalProperties: false
      required:
        - network_id
        - network_name
        - entity_type
        - data
        - hrp
        - address
      properties:
        network_id:
          $ref: "#/components/schemas/Byte"
          description: "An 8-bit unsigned integer representing the network id that the address is for"
        network_name:
          type: string
          description: "The logical name of the network that this address is for"
        entity_type:
          $ref: "#/components/schemas/AddressKind"
          description: "The type of entity addressed through this address type"
        data:
          type: string
          description: "The hex-encoded data which was in the bech32m-encoded address"
        hrp:
          type: string
          description: "The HRP (human readable part) of the bech32m-encoded address"
        address:
          $ref: "#/components/schemas/Address"
          description: "The `Value` representation of this address"

    # SBOR Encoding
    SBOREncodeRequest:
      $ref: "#/components/schemas/Value"
      description: "A request to encode a `Value` in SBOR and return the hex-encoded representation of the SBOR-encoded `Value`"

    SBOREncodeResponse:
      type: object
      description: "The response to the `SBOREncodeRequest` containing the hex-encoded representation of the SBOR-encoded `Value`"
      additionalProperties: false
      required:
        - encoded_value
      properties:
        encoded_value:
          type: string
          description: "The hex-encoded representation of the SBOR-encoded `Value`"

    # SBOR Decoding
    SBORDecodeRequest:
      type: object
      description: "A request to decode a hex-encoded representation of some SBOR-encoded bytes"
      additionalProperties: false
      required:
        - encoded_value
        - network_id
      properties:
        encoded_value:
          type: string
          description: "The hex-encoded representation of the SBOR-encoded `Value`"
        network_id:
          $ref: "#/components/schemas/Byte"
          description: "The network id that this value is thought to be associated with. This is only relevant in the case of addresses and their bech32m encoding, aside from that, the network id is not used."

    SBORDecodeResponse:
      $ref: "#/components/schemas/Value"
      description: "A response to the `SBORDecodeRequest` containing the decoded value"

    # Extract ABI Request
    ExtractAbiRequest:
      type: object
      description: "A request to extract the ABI from the package's hex-encoded WASM binrary"
      additionalProperties: false
      required:
        - package_wasm
      properties:
        package_wasm:
          type: string
          description: "A hex-encoded string of the package WASM binary"

    ExtractAbiResponse:
      type: object
      description: "A response to the `ExtractAbiRequest` containing the ABI and code"
      additionalProperties: false
      required:
        - code
        - abi
      properties:
        code:
          type: string
          description: "A hex-encoded string of the package WASM binary"
        abi:
          type: string
          description: "A hex-encoded string of the SBOR-encoded package ABI"

    # ================================
    # Request & Response Dependencies
    # ================================

    AddressKind:
      type: string
      description: "An enum representing the type of the type of the entity being addressed"
      enum:
        - Resource
        - Package
        - AccountComponent
        - SystemComponent
        - NormalComponent

    AddressType:
      type: string
      enum:
        - PackageAddress
        - ResourceAddress
        - ComponentAddress

    Address:
      oneOf:
        - $ref: "#/components/schemas/NonValuePackageAddress"
        - $ref: "#/components/schemas/NonValueResourceAddress"
        - $ref: "#/components/schemas/NonValueComponentAddress"
      discriminator:
        propertyName: type
        mapping:
          PackageAddress: "#/components/schemas/NonValuePackageAddress"
          ResourceAddress: "#/components/schemas/NonValueResourceAddress"
          ComponentAddress: "#/components/schemas/NonValueComponentAddress"

    NonValueComponentAddress:
      type: object
      description: "A Bech32m-encoded component address"
      required:
        - type
        - address
      properties:
        type:
          readOnly: true
          $ref: "#/components/schemas/AddressType"
        address:
          type: string
    NonValuePackageAddress:
      type: object
      description: "A Bech32m-encoded package address"
      required:
        - type
        - address
      properties:
        type:
          readOnly: true
          $ref: "#/components/schemas/AddressType"
        address:
          type: string
    NonValueResourceAddress:
      type: object
      description: "A Bech32m-encoded resource address"
      required:
        - type
        - address
      properties:
        type:
          readOnly: true
          $ref: "#/components/schemas/AddressType"
        address:
          type: string

    TransactionHeader:
      type: object
      description: "A transaction header used to describe different parameters about the transactions"
      additionalProperties: false
      required:
        - version
        - network_id
        - start_epoch_inclusive
        - end_epoch_exclusive
        - nonce
        - notary_public_key
        - notary_as_signatory
        - cost_unit_limit
        - tip_percentage
      properties:
        version:
          $ref: "#/components/schemas/Byte"
          description: "An 8-bit unsigned integer representing the transaction version. Currently, the library only supports a transaction version of 1."
        network_id:
          $ref: "#/components/schemas/Byte"
          description: "An 8-bit unsigned integer representing the network id that the transaction is for"
        start_epoch_inclusive:
          type: integer
          minimum: 0x00
          maximum: 0xFFFFFFFFFFFFFFFF
          description: "A 64-bit unsigned integer representing the epoch the earliest that this transaction can be executed"
        end_epoch_exclusive:
          type: integer
          minimum: 0x00
          maximum: 0xFFFFFFFFFFFFFFFF
          description: "A 64-bit unsigned integer representing the latest epoch this transaction should be executed"
        nonce:
          type: integer
          minimum: 0x00
          maximum: 0xFFFFFFFFFFFFFFFF
          description: "A 64-bit unsigned integer of the nonce to use for the transaction"
        notary_public_key:
          $ref: "#/components/schemas/PublicKey"
          description: "The public key of the notary"
        notary_as_signatory:
          type: boolean
          description: "A boolean representing whether the notary is also one of the people signing the transaction"
        cost_unit_limit:
          type: integer
          minimum: 0x00
          maximum: 0xFFFFFFFF
          description: "A 32-bit unsigned integer of the maximum cost units that this transaction can spend"
        tip_percentage:
          type: integer
          minimum: 0x00
          maximum: 0xFFFFFFFF
          description: "A 32-bit unsigned integer of the percentage of the tip to give to validators"

    TransactionManifest:
      type: object
      description: "A transaction manifest which describes what happens in a transaction"
      additionalProperties: false
      required:
        - instructions
        - blobs
      properties:
        instructions:
          $ref: "#/components/schemas/ManifestInstructions"
          description: "The instructions to execute in this transaction"
        blobs:
          type: array
          description: "An array of the blobs to use for the transaction"
          items:
            type: string

    ManifestInstructionsKind:
      type: string
      enum:
        - String
        - JSON

    ManifestInstructions:
      description: "A union type which represents the manifest instructions either as a String or as JSON"
      oneOf:
        - $ref: "#/components/schemas/ManifestInstructionsString"
        - $ref: "#/components/schemas/ManifestInstructionsJson"
      discriminator:
        propertyName: type
        mapping:
          String: "#/components/schemas/ManifestInstructionsString"
          JSON: "#/components/schemas/ManifestInstructionsJson"

    ManifestInstructionsString:
      type: object
      description: "A string representation of the instructions of the transaction"
      required:
        - type
        - value
      properties:
        type:
          readOnly: true
          $ref: "#/components/schemas/ManifestInstructionsKind"
        value:
          type: string
          description: "A string representation of the instructions of the transaction"

    ManifestInstructionsJson:
      type: object
      description: "A JSON representation of the instructions of the transaction"
      required:
        - type
        - value
      properties:
        type:
          readOnly: true
          $ref: "#/components/schemas/ManifestInstructionsKind"
        value:
          type: array
          description: "A JSON representation of the instructions of the transaction"
          items:
            $ref: "#/components/schemas/Instruction"

    TransactionIntent:
      type: object
      description: "A transaction intent of what the transaction it meant to do as well as the header parameters"
      additionalProperties: false
      required:
        - header
        - manifest
      properties:
        header:
          $ref: "#/components/schemas/TransactionHeader"
          description: "A transaction header used to describe different parameters about the transactions"
        manifest:
          $ref: "#/components/schemas/TransactionManifest"
          description: "A transaction manifest describing the instructions of a transaction"

    SignedTransactionIntent:
      type: object
      description: "A transaction intent which has been signed"
      additionalProperties: false
      required:
        - transaction_intent
        - signatures
      properties:
        transaction_intent:
          $ref: "#/components/schemas/TransactionIntent"
          description: "A transaction header used to describe different parameters about the transactions"
        signatures:
          type: array
          description: "An array containing the signature of the signers"
          items:
            $ref: "#/components/schemas/SignatureWithPublicKey"

    NotarizedTransaction:
      type: object
      additionalProperties: false
      required:
        - signed_intent
        - notary_signature
      properties:
        signed_intent:
          $ref: "#/components/schemas/SignedTransactionIntent"
        notary_signature:
          $ref: "#/components/schemas/Signature"
          description: "The signature of the notary"

    Byte:
      type: integer
      minimum: 0x00
      maximum: 0xFF
      description: An 8-bit unsigned number.

    # =======
    # Crypto
    # =======

    Curve:
      type: string
      enum:
        - EcdsaSecp256k1
        - EddsaEd25519

    SignatureWithPublicKey:
      description: "Represents a public key of any of the supported curves"
      oneOf:
        - $ref: "#/components/schemas/EcdsaSecp256k1SignatureWithPublicKey"
        - $ref: "#/components/schemas/EddsaEd25519SignatureWithPublicKey"
      discriminator:
        propertyName: type
        mapping:
          EcdsaSecp256k1: "#/components/schemas/EcdsaSecp256k1SignatureWithPublicKey"
          EddsaEd25519: "#/components/schemas/EddsaEd25519SignatureWithPublicKey"

    EcdsaSecp256k1SignatureWithPublicKey:
      type: object
      description: "An object representing an ECDSA Secp256k1 public key and signature"
      additionalProperties: false
      required:
        - type
        - signature
      properties:
        type:
          $ref: "#/components/schemas/Curve"
          readOnly: true
        signature:
          $ref: "#/components/schemas/EcdsaSecp256k1SignatureString"

    EddsaEd25519SignatureWithPublicKey:
      type: object
      description: "An object representing an EdDSA Ed25519 public key and signature"
      additionalProperties: false
      required:
        - type
        - public_key
        - signature
      properties:
        type:
          $ref: "#/components/schemas/Curve"
          readOnly: true
        public_key:
          $ref: "#/components/schemas/EddsaEd25519PublicKeyString"
        signature:
          $ref: "#/components/schemas/EddsaEd25519SignatureString"

    PublicKey:
      description: "An object representing an ECDSA or EdDSA public key"
      oneOf:
        - $ref: "#/components/schemas/EcdsaSecp256k1PublicKey"
        - $ref: "#/components/schemas/EddsaEd25519PublicKey"
      discriminator:
        propertyName: type
        mapping:
          EcdsaSecp256k1: "#/components/schemas/EcdsaSecp256k1PublicKey"
          EddsaEd25519: "#/components/schemas/EddsaEd25519PublicKey"

    EcdsaSecp256k1PublicKey:
      type: object
      additionalProperties: false
      required:
        - type
        - public_key
      properties:
        type:
          $ref: "#/components/schemas/Curve"
          readOnly: true
        public_key:
          $ref: "#/components/schemas/EcdsaSecp256k1PublicKeyString"

    EddsaEd25519PublicKey:
      type: object
      additionalProperties: false
      required:
        - type
        - public_key
      properties:
        type:
          $ref: "#/components/schemas/Curve"
          readOnly: true
        public_key:
          $ref: "#/components/schemas/EddsaEd25519PublicKeyString"

    Signature:
      description: "An object representing an ECDSA or EdDSA public key"
      oneOf:
        - $ref: "#/components/schemas/EcdsaSecp256k1Signature"
        - $ref: "#/components/schemas/EddsaEd25519Signature"
      discriminator:
        propertyName: type
        mapping:
          EcdsaSecp256k1: "#/components/schemas/EcdsaSecp256k1Signature"
          EddsaEd25519: "#/components/schemas/EddsaEd25519Signature"

    EcdsaSecp256k1Signature:
      type: object
      additionalProperties: false
      required:
        - type
        - signature
      properties:
        type:
          $ref: "#/components/schemas/Curve"
          readOnly: true
        signature:
          $ref: "#/components/schemas/EcdsaSecp256k1SignatureString"

    EddsaEd25519Signature:
      type: object
      additionalProperties: false
      required:
        - type
        - signature
      properties:
        type:
          $ref: "#/components/schemas/Curve"
          readOnly: true
        signature:
          $ref: "#/components/schemas/EddsaEd25519SignatureString"

    EcdsaSecp256k1PublicKeyString:
      type: string
      description: "The hex-encoded 33-byte long public key of an ECDSA Secp256k1 key-pair"
      minLength: 66
      maxLength: 66

    EcdsaSecp256k1SignatureString:
      type: string
      description: "The hex-encoded 65-byte long recovery id and signature of an ECDSA Secp256k1 key-pair"
      minLength: 130
      maxLength: 130

    EddsaEd25519PublicKeyString:
      type: string
      description: "The hex-encoded 32-byte long public key of an EdDSA Ed25519 key-pair"
      minLength: 64
      maxLength: 64

    EddsaEd25519SignatureString:
      type: string
      description: "The hex-encoded 64-byte long recovery id and signature of an EdDSA Ed25519 key-pair"
      minLength: 128
      maxLength: 128

    # ======
    # Value
    # ======

    ValueKind:
      type: string
      enum:
        - Unit
        - Bool
        - I8
        - I16
        - I32
        - I64
        - I128
        - U8
        - U16
        - U32
        - U64
        - U128
        - String
        - Struct
        - Enum
        - Option
        - Array
        - Tuple
        - Result
        - List
        - Set
        - Map
        - Decimal
        - PreciseDecimal
        - Component
        - PackageAddress
        - ComponentAddress
        - ResourceAddress
        - Hash
        - Bucket
        - Proof
        - Vault
        - NonFungibleId
        - NonFungibleAddress
        - KeyValueStore
        - EcdsaSecp256k1PublicKey
        - EcdsaSecp256k1Signature
        - EddsaEd25519PublicKey
        - EddsaEd25519Signature
        - Blob
        - Expression

    Value:
      oneOf:
        - $ref: "#/components/schemas/U8"
        - $ref: "#/components/schemas/U16"
        - $ref: "#/components/schemas/U32"
        - $ref: "#/components/schemas/U64"
        - $ref: "#/components/schemas/U128"
        - $ref: "#/components/schemas/I8"
        - $ref: "#/components/schemas/I16"
        - $ref: "#/components/schemas/I32"
        - $ref: "#/components/schemas/I64"
        - $ref: "#/components/schemas/I128"
        - $ref: "#/components/schemas/String"
        - $ref: "#/components/schemas/Struct"
        - $ref: "#/components/schemas/Enum"
        - $ref: "#/components/schemas/Option"
        - $ref: "#/components/schemas/Result"
        - $ref: "#/components/schemas/Array"
        - $ref: "#/components/schemas/Tuple"
        - $ref: "#/components/schemas/List"
        - $ref: "#/components/schemas/Set"
        - $ref: "#/components/schemas/Map"
        - $ref: "#/components/schemas/Decimal"
        - $ref: "#/components/schemas/PreciseDecimal"
        - $ref: "#/components/schemas/Component"
        - $ref: "#/components/schemas/ValueComponentAddress"
        - $ref: "#/components/schemas/ValueResourceAddress"
        - $ref: "#/components/schemas/ValuePackageAddress"
        - $ref: "#/components/schemas/Hash"
        - $ref: "#/components/schemas/KeyValueStore"
        - $ref: "#/components/schemas/Bucket"
        - $ref: "#/components/schemas/Proof"
        - $ref: "#/components/schemas/Vault"
        - $ref: "#/components/schemas/NonFungibleId"
        - $ref: "#/components/schemas/NonFungibleAddress"
        - $ref: "#/components/schemas/EcdsaSecp256k1PublicKeyValue"
        - $ref: "#/components/schemas/EcdsaSecp256k1SignatureValue"
        - $ref: "#/components/schemas/EddsaEd25519PublicKeyValue"
        - $ref: "#/components/schemas/EddsaEd25519SignatureValue"
        - $ref: "#/components/schemas/Expression"
        - $ref: "#/components/schemas/Blob"
      discriminator:
        propertyName: type
        mapping:
          U8: "#/components/schemas/U8"
          U16: "#/components/schemas/U16"
          U32: "#/components/schemas/U32"
          U64: "#/components/schemas/U64"
          U128: "#/components/schemas/U128"
          I8: "#/components/schemas/I8"
          I16: "#/components/schemas/I16"
          I32: "#/components/schemas/I32"
          I64: "#/components/schemas/I64"
          I128: "#/components/schemas/I128"
          String: "#/components/schemas/String"
          Struct: "#/components/schemas/Struct"
          Enum: "#/components/schemas/Enum"
          Option: "#/components/schemas/Option"
          Result: "#/components/schemas/Result"
          Array: "#/components/schemas/Array"
          Tuple: "#/components/schemas/Tuple"
          List: "#/components/schemas/List"
          Set: "#/components/schemas/Set"
          Map: "#/components/schemas/Map"
          Decimal: "#/components/schemas/Decimal"
          PreciseDecimal: "#/components/schemas/PreciseDecimal"
          Component: "#/components/schemas/Component"
          ComponentAddress: "#/components/schemas/ValueComponentAddress"
          ResourceAddress: "#/components/schemas/ValueResourceAddress"
          PackageAddress: "#/components/schemas/ValuePackageAddress"
          Hash: "#/components/schemas/Hash"
          KeyValueStore: "#/components/schemas/KeyValueStore"
          Bucket: "#/components/schemas/Bucket"
          Proof: "#/components/schemas/Proof"
          Vault: "#/components/schemas/Vault"
          NonFungibleId: "#/components/schemas/NonFungibleId"
          NonFungibleAddress: "#/components/schemas/NonFungibleAddress"
          EcdsaSecp256k1PublicKey: "#/components/schemas/EcdsaSecp256k1PublicKeyValue"
          EcdsaSecp256k1Signature: "#/components/schemas/EcdsaSecp256k1SignatureValue"
          EddsaEd25519PublicKey: "#/components/schemas/EddsaEd25519PublicKeyValue"
          EddsaEd25519Signature: "#/components/schemas/EddsaEd25519SignatureValue"
          Expression: "#/components/schemas/Expression"
          Blob: "#/components/schemas/Blob"
    U8:
      additionalProperties: false
      required:
        - type
        - value
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        value:
          type: string
    U16:
      additionalProperties: false
      required:
        - type
        - value
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        value:
          type: string
    U32:
      additionalProperties: false
      required:
        - type
        - value
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        value:
          type: string
    U64:
      additionalProperties: false
      required:
        - type
        - value
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        value:
          type: string
    U128:
      additionalProperties: false
      required:
        - type
        - value
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        value:
          type: string
    I8:
      additionalProperties: false
      required:
        - type
        - value
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        value:
          type: string
    I16:
      additionalProperties: false
      required:
        - type
        - value
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        value:
          type: string
    I32:
      additionalProperties: false
      required:
        - type
        - value
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        value:
          type: string
    I64:
      additionalProperties: false
      required:
        - type
        - value
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        value:
          type: string
    I128:
      additionalProperties: false
      required:
        - type
        - value
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        value:
          type: string
    String:
      additionalProperties: false
      required:
        - type
        - value
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        value:
          type: string
    Struct:
      additionalProperties: false
      required:
        - type
        - fields
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        fields:
          type: array
          items:
            $ref: "#/components/schemas/Value"
    Enum:
      additionalProperties: false
      required:
        - type
        - variant
        - fields
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        variant:
          type: string
        fields:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/Value"
    Option:
      description: "TODO: Need to add this."
    Result:
      description: "TODO: Need to add this."
    Array:
      additionalProperties: false
      required:
        - type
        - element_type
        - elements
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        element_type:
          $ref: "#/components/schemas/ValueKind"
        elements:
          type: array
          items:
            $ref: "#/components/schemas/Value"
    Tuple:
      additionalProperties: false
      required:
        - type
        - elements
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        elements:
          type: array
          items:
            $ref: "#/components/schemas/Value"
    List:
      additionalProperties: false
      required:
        - type
        - element_type
        - elements
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        element_type:
          $ref: "#/components/schemas/ValueKind"
        elements:
          type: array
          items:
            $ref: "#/components/schemas/Value"
    Set:
      additionalProperties: false
      required:
        - type
        - element_type
        - elements
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        element_type:
          $ref: "#/components/schemas/ValueKind"
        elements:
          type: array
          items:
            $ref: "#/components/schemas/Value"
    Map:
      additionalProperties: false
      required:
        - type
        - key_type
        - value_type
        - elements
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        key_type:
          $ref: "#/components/schemas/ValueKind"
        value_type:
          $ref: "#/components/schemas/ValueKind"
        elements:
          type: array
          items:
            $ref: "#/components/schemas/Value"
    Decimal:
      additionalProperties: false
      required:
        - type
        - value
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        value:
          type: string
    PreciseDecimal:
      additionalProperties: false
      required:
        - type
        - value
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        value:
          type: string
    Component:
      additionalProperties: false
      required:
        - type
        - address
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        address:
          type: string
    ValueComponentAddress:
      additionalProperties: false
      required:
        - type
        - address
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        address:
          type: string
    ValueResourceAddress:
      additionalProperties: false
      required:
        - type
        - address
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        address:
          type: string
    ValuePackageAddress:
      additionalProperties: false
      required:
        - type
        - address
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        address:
          type: string
    Hash:
      additionalProperties: false
      required:
        - type
        - value
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        value:
          description: "A 32-byte long (64 character long) hash"
          type: string
    Bucket:
      oneOf:
        - additionalProperties: false
          required:
            - type
            - identifier
          properties:
            type:
              $ref: "#/components/schemas/ValueKind"
              readOnly: true
            identifier:
              type: string
              description: "A string identifier used to provide user friendly names to buckets and proofs for easy identification"
        - additionalProperties: false
          required:
            - type
            - identifier
          properties:
            type:
              $ref: "#/components/schemas/ValueKind"
              readOnly: true
            identifier:
              type: integer
              description: "A 32-bit unsigned number used to identify buckets and proofs"
    Proof:
      oneOf:
        - additionalProperties: false
          required:
            - type
            - identifier
          properties:
            type:
              $ref: "#/components/schemas/ValueKind"
              readOnly: true
            identifier:
              type: string
              description: "A string identifier used to provide user friendly names to buckets and proofs for easy identification"
        - additionalProperties: false
          required:
            - type
            - identifier
          properties:
            type:
              $ref: "#/components/schemas/ValueKind"
              readOnly: true
            identifier:
              type: integer
              description: "A 32-bit unsigned number used to identify buckets and proofs"
    Vault:
      additionalProperties: false
      required:
        - type
        - identifier
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        identifier:
          type: string
    NonFungibleId:
      additionalProperties: false
      required:
        - type
        - value
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        value:
          type: string
          description: "The hex-encoded bytes of the SBOR-encoded NonFungibleId"
    NonFungibleAddress:
      additionalProperties: false
      required:
        - type
        - address
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        address:
          type: string
          description: "The hex-encoded bytes of the NonFungibleAddress"
    KeyValueStore:
      additionalProperties: false
      required:
        - type
        - identifier
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        identifier:
          type: string
    EcdsaSecp256k1PublicKeyValue:
      additionalProperties: false
      required:
        - type
        - public_key
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        public_key:
          type: string
    EcdsaSecp256k1SignatureValue:
      additionalProperties: false
      required:
        - type
        - signature
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        signature:
          type: string
    EddsaEd25519PublicKeyValue:
      additionalProperties: false
      required:
        - type
        - public_key
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        public_key:
          type: string
    EddsaEd25519SignatureValue:
      additionalProperties: false
      required:
        - type
        - signature
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        signature:
          type: string
    Blob:
      additionalProperties: false
      required:
        - type
        - hash
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        hash:
          type: string
          minLength: 64
          maxLength: 64
          description: A 32-byte long (64 characters long) hash of the blob
    Expression:
      additionalProperties: false
      required:
        - type
        - value
      properties:
        type:
          $ref: "#/components/schemas/ValueKind"
          readOnly: true
        value:
          type: string

    # =============
    # Instructions
    # =============

    InstructionKind:
      type: string
      enum:
        - CALL_FUNCTION
        - CALL_METHOD
        - TAKE_FROM_WORKTOP
        - TAKE_FROM_WORKTOP_BY_AMOUNT
        - TAKE_FROM_WORKTOP_BY_IDS
        - ASSERT_WORKTOP_CONTAINS
        - ASSERT_WORKTOP_CONTAINS_BY_AMOUNT
        - ASSERT_WORKTOP_CONTAINS_BY_IDS
        - POP_FROM_AUTH_ZONE
        - PUSH_TO_AUTH_ZONE
        - CLEAR_AUTH_ZONE
        - CREATE_PROOF_FROM_AUTH_ZONE
        - CREATE_PROOF_FROM_AUTH_ZONE_BY_AMOUNT
        - CREATE_PROOF_FROM_AUTH_ZONE_BY_IDS
        - CREATE_PROOF_FROM_BUCKET
        - CLONE_PROOF
        - DROP_PROOF
        - DROP_ALL_PROOF
        - RETURN_TO_WORKTOP
        - PUBLISH_PACKAGE

    Instruction:
      oneOf:
        - $ref: "#/components/schemas/CallFunction"
        - $ref: "#/components/schemas/CallMethod"
        - $ref: "#/components/schemas/TakeFromWorktop"
        - $ref: "#/components/schemas/TakeFromWorktopByAmount"
        - $ref: "#/components/schemas/TakeFromWorktopByIds"
        - $ref: "#/components/schemas/AssertWorktopContains"
        - $ref: "#/components/schemas/AssertWorktopContainsByAmount"
        - $ref: "#/components/schemas/AssertWorktopContainsByIds"
        - $ref: "#/components/schemas/PopFromAuthZone"
        - $ref: "#/components/schemas/PushToAuthZone"
        - $ref: "#/components/schemas/ClearAuthZone"
        - $ref: "#/components/schemas/CreateProofFromAuthZone"
        - $ref: "#/components/schemas/CreateProofFromAuthZoneByAmount"
        - $ref: "#/components/schemas/CreateProofFromAuthZoneByIds"
        - $ref: "#/components/schemas/CreateProofFromBucket"
        - $ref: "#/components/schemas/CloneProof"
        - $ref: "#/components/schemas/DropProof"
        - $ref: "#/components/schemas/DropAllProofs"
        - $ref: "#/components/schemas/ReturnToWorktop"
        - $ref: "#/components/schemas/PublishPackage"
      discriminator:
        propertyName: instruction
        mapping:
          CALL_FUNCTION: "#/components/schemas/CallFunction"
          CALL_METHOD: "#/components/schemas/CallMethod"
          TAKE_FROM_WORKTOP: "#/components/schemas/TakeFromWorktop"
          TAKE_FROM_WORKTOP_BY_AMOUNT: "#/components/schemas/TakeFromWorktopByAmount"
          TAKE_FROM_WORKTOP_BY_IDS: "#/components/schemas/TakeFromWorktopByIds"
          ASSERT_WORKTOP_CONTAINS: "#/components/schemas/AssertWorktopContains"
          ASSERT_WORKTOP_CONTAINS_BY_AMOUNT: "#/components/schemas/AssertWorktopContainsByAmount"
          ASSERT_WORKTOP_CONTAINS_BY_IDS: "#/components/schemas/AssertWorktopContainsByIds"
          POP_FROM_AUTH_ZONE: "#/components/schemas/PopFromAuthZone"
          PUSH_TO_AUTH_ZONE: "#/components/schemas/PushToAuthZone"
          CLEAR_AUTH_ZONE: "#/components/schemas/ClearAuthZone"
          CREATE_PROOF_FROM_AUTH_ZONE: "#/components/schemas/CreateProofFromAuthZone"
          CREATE_PROOF_FROM_AUTH_ZONE_BY_AMOUNT: "#/components/schemas/CreateProofFromAuthZoneByAmount"
          CREATE_PROOF_FROM_AUTH_ZONE_BY_IDS: "#/components/schemas/CreateProofFromAuthZoneByIds"
          CREATE_PROOF_FROM_BUCKET: "#/components/schemas/CreateProofFromBucket"
          CLONE_PROOF: "#/components/schemas/CloneProof"
          DROP_PROOF: "#/components/schemas/DropProof"
          DROP_ALL_PROOF: "#/components/schemas/DropAllProofs"
          RETURN_TO_WORKTOP: "#/components/schemas/ReturnToWorktop"
          PUBLISH_PACKAGE: "#/components/schemas/PublishPackage"
    CallFunction:
      additionalProperties: false
      required:
        - instruction
        - package_address
        - blueprint_name
        - function_name
        - arguments
      properties:
        instruction:
          $ref: "#/components/schemas/InstructionKind"
          readOnly: true
        package_address:
          $ref: "#/components/schemas/ValuePackageAddress"
        blueprint_name:
          $ref: "#/components/schemas/String"
        function_name:
          $ref: "#/components/schemas/String"
        arguments:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/Value"
    CallMethod:
      additionalProperties: false
      required:
        - instruction
        - component_address
        - method_name
        - arguments
      properties:
        instruction:
          $ref: "#/components/schemas/InstructionKind"
          readOnly: true
        component_address:
          $ref: "#/components/schemas/ValueComponentAddress"
        method_name:
          $ref: "#/components/schemas/String"
        arguments:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/Value"
    TakeFromWorktop:
      additionalProperties: false
      required:
        - instruction
        - resource_address
        - into_bucket
      properties:
        instruction:
          $ref: "#/components/schemas/InstructionKind"
          readOnly: true
        resource_address:
          $ref: "#/components/schemas/ValueResourceAddress"
        into_bucket:
          $ref: "#/components/schemas/Bucket"
    TakeFromWorktopByAmount:
      additionalProperties: false
      required:
        - instruction
        - resource_address
        - into_bucket
        - amount
      properties:
        instruction:
          $ref: "#/components/schemas/InstructionKind"
          readOnly: true
        resource_address:
          $ref: "#/components/schemas/ValueResourceAddress"
        amount:
          $ref: "#/components/schemas/Decimal"
        into_bucket:
          $ref: "#/components/schemas/Bucket"
    TakeFromWorktopByIds:
      additionalProperties: false
      required:
        - instruction
        - resource_address
        - into_bucket
        - ids
      properties:
        instruction:
          $ref: "#/components/schemas/InstructionKind"
          readOnly: true
        resource_address:
          $ref: "#/components/schemas/ValueResourceAddress"
        ids:
          type: array
          items:
            $ref: "#/components/schemas/NonFungibleId"
        into_bucket:
          $ref: "#/components/schemas/Bucket"
    ReturnToWorktop:
      additionalProperties: false
      required:
        - instruction
        - bucket
      properties:
        instruction:
          $ref: "#/components/schemas/InstructionKind"
          readOnly: true
        bucket:
          $ref: "#/components/schemas/Bucket"
    AssertWorktopContains:
      additionalProperties: false
      required:
        - instruction
        - resource_address
      properties:
        instruction:
          $ref: "#/components/schemas/InstructionKind"
          readOnly: true
        resource_address:
          $ref: "#/components/schemas/ValueResourceAddress"
    AssertWorktopContainsByAmount:
      additionalProperties: false
      required:
        - instruction
        - resource_address
        - amount
      properties:
        instruction:
          $ref: "#/components/schemas/InstructionKind"
          readOnly: true
        resource_address:
          $ref: "#/components/schemas/ValueResourceAddress"
        amount:
          $ref: "#/components/schemas/Decimal"
    AssertWorktopContainsByIds:
      additionalProperties: false
      required:
        - instruction
        - resource_address
        - ids
      properties:
        instruction:
          $ref: "#/components/schemas/InstructionKind"
          readOnly: true
        resource_address:
          $ref: "#/components/schemas/ValueResourceAddress"
        ids:
          type: array
          items:
            $ref: "#/components/schemas/NonFungibleId"
    PopFromAuthZone:
      additionalProperties: false
      required:
        - instruction
        - into_proof
      properties:
        instruction:
          $ref: "#/components/schemas/InstructionKind"
          readOnly: true
        into_proof:
          $ref: "#/components/schemas/Proof"
    PushToAuthZone:
      additionalProperties: false
      required:
        - instruction
        - proof
      properties:
        instruction:
          $ref: "#/components/schemas/InstructionKind"
          readOnly: true
        proof:
          $ref: "#/components/schemas/Proof"
    ClearAuthZone:
      required:
        - instruction
      properties:
        instruction:
          $ref: "#/components/schemas/InstructionKind"
          readOnly: true
      additionalProperties: false
    CreateProofFromAuthZone:
      additionalProperties: false
      required:
        - instruction
        - resource_address
        - into_proof
      properties:
        instruction:
          $ref: "#/components/schemas/InstructionKind"
          readOnly: true
        resource_address:
          $ref: "#/components/schemas/ValueResourceAddress"
        into_proof:
          $ref: "#/components/schemas/Proof"
    CreateProofFromAuthZoneByAmount:
      additionalProperties: false
      required:
        - instruction
        - resource_address
        - into_proof
        - amount
      properties:
        instruction:
          $ref: "#/components/schemas/InstructionKind"
          readOnly: true
        resource_address:
          $ref: "#/components/schemas/ValueResourceAddress"
        amount:
          $ref: "#/components/schemas/Decimal"
        into_proof:
          $ref: "#/components/schemas/Proof"
    CreateProofFromAuthZoneByIds:
      additionalProperties: false
      required:
        - instruction
        - resource_address
        - into_proof
        - ids
      properties:
        instruction:
          $ref: "#/components/schemas/InstructionKind"
          readOnly: true
        resource_address:
          $ref: "#/components/schemas/ValueResourceAddress"
        ids:
          type: array
          items:
            $ref: "#/components/schemas/NonFungibleId"
        into_proof:
          $ref: "#/components/schemas/Proof"
    CreateProofFromBucket:
      additionalProperties: false
      required:
        - instruction
        - bucket
        - into_proof
      properties:
        instruction:
          $ref: "#/components/schemas/InstructionKind"
          readOnly: true
        bucket:
          $ref: "#/components/schemas/Bucket"
        into_proof:
          $ref: "#/components/schemas/Proof"
    CloneProof:
      additionalProperties: false
      required:
        - instruction
        - proof
        - into_proof
      properties:
        instruction:
          $ref: "#/components/schemas/InstructionKind"
          readOnly: true
        proof:
          $ref: "#/components/schemas/Proof"
        into_proof:
          $ref: "#/components/schemas/Proof"
    DropProof:
      additionalProperties: false
      required:
        - instruction
        - proof
      properties:
        instruction:
          $ref: "#/components/schemas/InstructionKind"
          readOnly: true
        proof:
          $ref: "#/components/schemas/Proof"
    DropAllProofs:
      required:
        - instruction
      properties:
        instruction:
          $ref: "#/components/schemas/InstructionKind"
          readOnly: true
      additionalProperties: false
    PublishPackage:
      additionalProperties: false
      required:
        - instruction
        - code
        - abi
      properties:
        instruction:
          $ref: "#/components/schemas/InstructionKind"
          readOnly: true
        code:
          $ref: "#/components/schemas/Blob"
        abi:
          $ref: "#/components/schemas/Blob"

    # ======
    # Error
    # ======

    ErrorKind:
      type: string
      enum:
        - AddressError
        - UnrecognizedAddressFormat
        - SborDecodeError
        - DeserializationError
        - InvalidRequestString
        - UnexpectedContents
        - InvalidType
        - UnknownTypeId
        - ParseError
        - NoManifestRepresentation
        - TransactionCompileError
        - TransactionDecompileError
        - UnsupportedTransactionVersion
        - GeneratorError
        - RequestResponseConversionError
        - UnrecognizedCompiledIntentFormat
        - TransactionValidationError
        - ExtractAbiError
        - NetworkMismatchError

    ErrorResponse:
      oneOf:
        - $ref: "#/components/schemas/AddressError"
        - $ref: "#/components/schemas/UnrecognizedAddressFormat"
        - $ref: "#/components/schemas/SborDecodeError"
        - $ref: "#/components/schemas/DeserializationError"
        - $ref: "#/components/schemas/InvalidRequestString"
        - $ref: "#/components/schemas/UnexpectedContents"
        - $ref: "#/components/schemas/InvalidType"
        - $ref: "#/components/schemas/UnknownTypeId"
        - $ref: "#/components/schemas/ParseError"
        - $ref: "#/components/schemas/NoManifestRepresentation"
        - $ref: "#/components/schemas/TransactionCompileError"
        - $ref: "#/components/schemas/TransactionDecompileError"
        - $ref: "#/components/schemas/UnsupportedTransactionVersion"
        - $ref: "#/components/schemas/GeneratorError"
        - $ref: "#/components/schemas/RequestResponseConversionError"
        - $ref: "#/components/schemas/UnrecognizedCompiledIntentFormat"
        - $ref: "#/components/schemas/TransactionValidationError"
        - $ref: "#/components/schemas/ExtractAbiError"
        - $ref: "#/components/schemas/NetworkMismatchError"
      discriminator:
        propertyName: error
        mapping:
          AddressError: "#/components/schemas/AddressError"
          UnrecognizedAddressFormat: "#/components/schemas/UnrecognizedAddressFormat"
          SborDecodeError: "#/components/schemas/SborDecodeError"
          DeserializationError: "#/components/schemas/DeserializationError"
          InvalidRequestString: "#/components/schemas/InvalidRequestString"
          UnexpectedContents: "#/components/schemas/UnexpectedContents"
          InvalidType: "#/components/schemas/InvalidType"
          UnknownTypeId: "#/components/schemas/UnknownTypeId"
          ParseError: "#/components/schemas/ParseError"
          NoManifestRepresentation: "#/components/schemas/NoManifestRepresentation"
          TransactionCompileError: "#/components/schemas/TransactionCompileError"
          TransactionDecompileError: "#/components/schemas/TransactionDecompileError"
          UnsupportedTransactionVersion: "#/components/schemas/UnsupportedTransactionVersion"
          GeneratorError: "#/components/schemas/GeneratorError"
          RequestResponseConversionError: "#/components/schemas/RequestResponseConversionError"
          UnrecognizedCompiledIntentFormat: "#/components/schemas/UnrecognizedCompiledIntentFormat"
          TransactionValidationError: "#/components/schemas/TransactionValidationError"
          ExtractAbiError: "#/components/schemas/ExtractAbiError"
          NetworkMismatchError: "#/components/schemas/NetworkMismatchError"

    AddressError:
      type: object
      description: "An error emitted if the encoding or decoding of Bech32 addresses fails."
      required:
        - error
        - value
      properties:
        error:
          $ref: "#/components/schemas/ErrorKind"
          readOnly: true
        value:
          type: string
    UnrecognizedAddressFormat:
      type: object
      description: An error emitted when attempting to get information on an address but its format could not be established. Typically, this means that the entity byte is invalid or unknown.
      required:
        - error
      properties:
        error:
          $ref: "#/components/schemas/ErrorKind"
          readOnly: true
    SborDecodeError:
      type: object
      description: An error emitted when the decoding of SBOR fails.
      required:
        - error
        - value
      properties:
        error:
          $ref: "#/components/schemas/ErrorKind"
          readOnly: true
        value:
          type: string
    DeserializationError:
      type: object
      description: An error emitted when deserialization of a JSON payload fails.
      required:
        - error
        - value
      properties:
        error:
          $ref: "#/components/schemas/ErrorKind"
          readOnly: true
        value:
          type: string
    InvalidRequestString:
      type: object
      description: An error emitted when the contents of the request string pointer could not be loaded.
      required:
        - error
        - value
      properties:
        error:
          $ref: "#/components/schemas/ErrorKind"
          readOnly: true
        value:
          type: string
    UnexpectedContents:
      type: object
      description: An error emitted during the conversion from transaction::ast::Value => crate::Value. This error typically means that the contents of some value were unexpected. An example of this is a package address being found inside of a [`transaction::manifest::ast::Value::Decimal`].
      required:
        - error
        - kind
        - expected
        - found
      properties:
        error:
          $ref: "#/components/schemas/ErrorKind"
          readOnly: true
        kind:
          $ref: "#/components/schemas/ValueKind"
        expected:
          type: array
          items:
            $ref: "#/components/schemas/ValueKind"
        found:
          $ref: "#/components/schemas/ValueKind"
    InvalidType:
      type: object
      description: An error emitted when validating the type of `Value` objects.
      required:
        - error
        - expected_type
        - actual_type
      properties:
        error:
          $ref: "#/components/schemas/ErrorKind"
          readOnly: true
        expected_type:
          $ref: "#/components/schemas/ValueKind"
        actual_type:
          $ref: "#/components/schemas/ValueKind"
    UnknownTypeId:
      type: object
      description: An error emitted when encountering an unknown SBOR type id during value conversion.
      required:
        - error
        - type_id
      properties:
        error:
          $ref: "#/components/schemas/ErrorKind"
          readOnly: true
        type_id:
          type: integer
    ParseError:
      type: object
      description: An error emitted when the parsing of a value from string fails.
      required:
        - error
        - kind
        - message
      properties:
        error:
          $ref: "#/components/schemas/ErrorKind"
          readOnly: true
        kind:
          $ref: "#/components/schemas/ValueKind"
        message:
          type: string
    NoManifestRepresentation:
      type: object
      description: An error emitted when encountering a value that does not have a manifest representation and therefore a manifest can not be created containing this type.
      required:
        - error
        - kind
      properties:
        error:
          $ref: "#/components/schemas/ErrorKind"
          readOnly: true
        kind:
          $ref: "#/components/schemas/ValueKind"
    TransactionCompileError:
      type: object
      description: An error emitted when an error is encountered during transaction compilation.
      required:
        - error
        - value
      properties:
        error:
          $ref: "#/components/schemas/ErrorKind"
          readOnly: true
        value:
          type: string
    TransactionDecompileError:
      type: object
      description: An error when an error encountered during transaction manifest decompilation.
      required:
        - error
        - value
      properties:
        error:
          $ref: "#/components/schemas/ErrorKind"
          readOnly: true
        value:
          type: string
    UnsupportedTransactionVersion:
      type: object
      description: An error emitted when a transaction version is specified but the library has no support for this transaction version.
      required:
        - error
        - value
      properties:
        error:
          $ref: "#/components/schemas/ErrorKind"
          readOnly: true
        value:
          type: number
    GeneratorError:
      type: object
      description: An error emitted during the conversion of ast::Instructions to a `TransactionManifest`
      required:
        - error
        - value
      properties:
        error:
          $ref: "#/components/schemas/ErrorKind"
          readOnly: true
        value:
          type: string
    RequestResponseConversionError:
      type: object
      description: An error emitted when the conversion to a specific request or response type fails
      required:
        - error
        - value
      properties:
        error:
          $ref: "#/components/schemas/ErrorKind"
          readOnly: true
        value:
          type: string
    UnrecognizedCompiledIntentFormat:
      type: object
      description: An error emitted when attempting to decompile a transaction intent but the format is not known to the library.
      required:
        - error
      properties:
        error:
          $ref: "#/components/schemas/ErrorKind"
          readOnly: true
    TransactionValidationError:
      type: object
      description: An error emitted when attempting to validate a transaction fails.
      required:
        - error
        - value
      properties:
        error:
          $ref: "#/components/schemas/ErrorKind"
          readOnly: true
        value:
          type: string
    ExtractAbiError:
      type: object
      description: An error emitted when the extraction of the package ABI fails.
      required:
        - error
        - value
      properties:
        error:
          $ref: "#/components/schemas/ErrorKind"
          readOnly: true
        value:
          type: string
    NetworkMismatchError:
      type: object
      description: An error emitted when there is a network mismatch between addresses and the header network
      required:
        - error
        - expected
        - found
      properties:
        error:
          $ref: "#/components/schemas/ErrorKind"
          readOnly: true
        expected:
          $ref: "#/components/schemas/Byte"
        found:
          $ref: "#/components/schemas/Byte"
